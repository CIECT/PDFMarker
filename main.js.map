{"version":3,"file":"main.js","mappings":"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","sources":["webpack://pdf-marker/./main.ts","webpack://pdf-marker/./src-electron/constants.ts","webpack://pdf-marker/./src-electron/ipc/application.handler.ts","webpack://pdf-marker/./src-electron/ipc/assignment.handler.ts","webpack://pdf-marker/./src-electron/ipc/comment.handler.ts","webpack://pdf-marker/./src-electron/ipc/config.handler.ts","webpack://pdf-marker/./src-electron/ipc/import.handler.ts","webpack://pdf-marker/./src-electron/ipc/rubric.handler.ts","webpack://pdf-marker/./src-electron/ipc/update.handler.ts","webpack://pdf-marker/./src-electron/ipc/workspace.handler.ts","webpack://pdf-marker/./src-electron/pdf/marking-annotations.ts","webpack://pdf-marker/./src-electron/pdf/pdf-utils.ts","webpack://pdf-marker/./src-electron/pdf/rubric-annotations.ts","webpack://pdf-marker/./src-electron/utils.ts","webpack://pdf-marker/./src/shared/constants/constants.ts","webpack://pdf-marker/./src/shared/constants/sakai.constants.ts","webpack://pdf-marker/./src/shared/info-objects/icon-svg.enum.ts","webpack://pdf-marker/./src/shared/info-objects/icon-type.enum.ts","webpack://pdf-marker/./src/shared/info-objects/submission.info.ts","webpack://pdf-marker/./src/shared/info-objects/workspace.ts","webpack://pdf-marker/external commonjs \"annotpdf\"","webpack://pdf-marker/external commonjs \"csvtojson\"","webpack://pdf-marker/external commonjs \"electron\"","webpack://pdf-marker/external commonjs \"electron-log\"","webpack://pdf-marker/external commonjs \"electron-updater\"","webpack://pdf-marker/external commonjs \"etl\"","webpack://pdf-marker/external commonjs \"fs-extra\"","webpack://pdf-marker/external commonjs \"glob\"","webpack://pdf-marker/external commonjs \"json-2-csv\"","webpack://pdf-marker/external commonjs \"jszip\"","webpack://pdf-marker/external commonjs \"lodash\"","webpack://pdf-marker/external commonjs \"pdf-lib\"","webpack://pdf-marker/external commonjs \"rxjs\"","webpack://pdf-marker/external commonjs \"simple-excel-to-json\"","webpack://pdf-marker/external commonjs \"unzipper\"","webpack://pdf-marker/external commonjs \"zip-dir\"","webpack://pdf-marker/external node-commonjs \"crypto\"","webpack://pdf-marker/external node-commonjs \"fs\"","webpack://pdf-marker/external node-commonjs \"fs/promises\"","webpack://pdf-marker/external node-commonjs \"os\"","webpack://pdf-marker/external node-commonjs \"path\"","webpack://pdf-marker/webpack/bootstrap","webpack://pdf-marker/webpack/before-startup","webpack://pdf-marker/webpack/startup","webpack://pdf-marker/webpack/after-startup"],"sourcesContent":["import {app, BrowserWindow, HandlerDetails, ipcMain, Menu, MenuItemConstructorOptions, screen, shell} from 'electron';\r\nimport {autoUpdater} from 'electron-updater';\r\nimport * as path from 'path';\r\nimport {\r\n  createAssignment,\r\n  finalizeAssignment,\r\n  finalizeAssignmentRubric,\r\n  getAssignmentGlobalSettings,\r\n  getAssignments,\r\n  getAssignmentSettings,\r\n  getGrades,\r\n  getMarks,\r\n  getPdfFile,\r\n  updateAssignmentRubric,\r\n  saveMarks,\r\n  shareExport,\r\n  updateAssignment,\r\n  updateAssignmentSettings\r\n} from './src-electron/ipc/assignment.handler';\r\nimport {\r\n  deleteRubric,\r\n  deleteRubricCheck,\r\n  getRubric,\r\n  getRubricNames,\r\n  getRubrics,\r\n  rubricUpload,\r\n  selectRubricFile\r\n} from './src-electron/ipc/rubric.handler';\r\nimport {toIpcResponse} from './src-electron/utils';\r\nimport {getZipEntries, importZip, validateZipFile} from './src-electron/ipc/import.handler';\r\nimport {\r\n  createWorkingFolder,\r\n  deleteWorkspace,\r\n  deleteWorkspaceCheck,\r\n  getWorkspaces,\r\n  moveWorkspaceAssignments,\r\n  updateWorkspaceName\r\n} from './src-electron/ipc/workspace.handler';\r\nimport {addComment, deleteComment, getComments} from './src-electron/ipc/comment.handler';\r\nimport {getConfig, updateConfig} from './src-electron/ipc/config.handler';\r\nimport {\r\n  getFile,\r\n  getFolder,\r\n  getVersion,\r\n  openExternalLink,\r\n  saveFile\r\n} from './src-electron/ipc/application.handler';\r\nimport {checkForUpdates, downloadUpdate} from './src-electron/ipc/update.handler';\r\n// tslint:disable-next-line:one-variable-per-declaration\r\nlet mainWindow, serve;\r\nconst args = process.argv.slice(1);\r\nserve = args.some(val => val === '--serve');\r\n\r\nconst logger = require('electron-log');\r\n\r\n\r\n// Only auto download for full (non pre-releases)\r\nautoUpdater.autoDownload = !autoUpdater.allowPrerelease;\r\n\r\n\r\nfunction createWindow() {\r\n\r\n  const size = screen.getPrimaryDisplay().workAreaSize;\r\n\r\n  // Create the browser window.\r\n  mainWindow = new BrowserWindow({\r\n    x: 0,\r\n    y: 0,\r\n    width: size.width,\r\n    height: size.height,\r\n    webPreferences: {\r\n      preload: path.join(__dirname, 'preload.js'),\r\n    },\r\n  });\r\n\r\n\r\n  const menu = Menu.buildFromTemplate(MENU_TEMPLATE);\r\n  Menu.setApplicationMenu(menu);\r\n\r\n  if (serve) {\r\n    // require('electron-reload')(__dirname, {\r\n    //   electron: require(`${__dirname}/node_modules/electron`)\r\n    // });\r\n    mainWindow.loadURL('http://localhost:4200').then(() => {\r\n      mainWindow.webContents.openDevTools();\r\n    });\r\n\r\n  } else {\r\n    mainWindow.loadFile(path.join(__dirname, 'dist/browser/index.html'));\r\n  }\r\n\r\n  // Emitted when the window is closed.\r\n  mainWindow.on('closed', () => {\r\n    // Dereference the window object, usually you would store window\r\n    // in an array if your app supports multi windows, this is the time\r\n    // when you should delete the corresponding element.\r\n    mainWindow = null;\r\n  });\r\n\r\n  mainWindow.webContents.setWindowOpenHandler((details: HandlerDetails) => {\r\n    // For now we assume all links are external\r\n    shell.openExternal(details.url);\r\n    return {\r\n      action: 'deny'\r\n    };\r\n  });\r\n}\r\n\r\nconst MENU_TEMPLATE: MenuItemConstructorOptions[] = [{\r\n  label: 'File',\r\n  submenu: [{\r\n    role: 'quit'\r\n  }]\r\n}, {\r\n  label: 'View',\r\n  submenu: [\r\n    {\r\n      label: 'Reload',\r\n      accelerator: 'CmdOrCtrl+R',\r\n      click (item, focusedWindow) {\r\n        if (focusedWindow) {\r\n          focusedWindow.reload();\r\n        }\r\n      }\r\n    },\r\n    {\r\n      label: 'Toggle Developer Tools',\r\n      accelerator: process.platform === 'darwin' ? 'Alt+Command+I' : 'Ctrl+Shift+I',\r\n      click (item, focusedWindow) {\r\n        if (focusedWindow) {\r\n          focusedWindow.webContents.toggleDevTools();\r\n        }\r\n      }\r\n    },\r\n    {\r\n      type: 'separator'\r\n    },\r\n    {\r\n      role: 'togglefullscreen'\r\n    }\r\n  ]\r\n}, {\r\n  label: 'Window',\r\n  submenu: [\r\n    {\r\n      role: 'minimize'\r\n    },\r\n    {\r\n      role: 'close'\r\n    }\r\n  ]\r\n}];\r\n\r\ntry {\r\n  // This method will be called when Electron has finished\r\n  // initialization and is ready to create browser windows.\r\n  // Some APIs can only be used after this event occurs.\r\n  app.whenReady().then(() => {\r\n\r\n\r\n    if (process.platform === 'win32') {\r\n      app.setAppUserModelId('za.ac.uwc.PDF-Marker'); // set appId from package.json or electron-builder.yml?\r\n    }\r\n    createWindow();\r\n\r\n\r\n\r\n    // Assignment API\r\n    ipcMain.handle('assignments:get', toIpcResponse(getAssignments));\r\n    ipcMain.handle('assignments:update', toIpcResponse(updateAssignment));\r\n    ipcMain.handle('assignments:create', toIpcResponse(createAssignment));\r\n    ipcMain.handle('assignments:saveMarks', toIpcResponse(saveMarks));\r\n    ipcMain.handle('assignments:finalizeAssignment', toIpcResponse(finalizeAssignment));\r\n    ipcMain.handle('assignments:finalizeAssignmentRubric', toIpcResponse(finalizeAssignmentRubric));\r\n    ipcMain.handle('assignments:getAssignmentSettings', toIpcResponse(getAssignmentSettings));\r\n    ipcMain.handle('assignments:getAssignmentGlobalSettings', toIpcResponse(getAssignmentGlobalSettings));\r\n    ipcMain.handle('assignments:updateAssignmentSettings', toIpcResponse(updateAssignmentSettings));\r\n    ipcMain.handle('assignments:shareExport', toIpcResponse(shareExport));\r\n    ipcMain.handle('assignments:getMarks', toIpcResponse(getMarks));\r\n    ipcMain.handle('assignments:getGrades', toIpcResponse(getGrades));\r\n    ipcMain.handle('assignments:updateAssignmentRubric', toIpcResponse(updateAssignmentRubric));\r\n    ipcMain.handle('assignments:getPdfFile', toIpcResponse(getPdfFile));\r\n\r\n    // Rubric API\r\n    ipcMain.handle('rubrics:selectRubricFile', toIpcResponse(selectRubricFile));\r\n    ipcMain.handle('rubrics:rubricUpload', toIpcResponse(rubricUpload));\r\n    ipcMain.handle('rubrics:getRubricNames', toIpcResponse(getRubricNames));\r\n    ipcMain.handle('rubrics:deleteRubricCheck', toIpcResponse(deleteRubricCheck));\r\n    ipcMain.handle('rubrics:deleteRubric', toIpcResponse(deleteRubric));\r\n    ipcMain.handle('rubrics:getRubric', toIpcResponse(getRubric));\r\n    ipcMain.handle('rubrics:getRubrics', toIpcResponse(getRubrics));\r\n\r\n    // Import API\r\n    ipcMain.handle('import:importZip', toIpcResponse(importZip));\r\n    ipcMain.handle('import:validateZipFile', toIpcResponse(validateZipFile));\r\n    ipcMain.handle('import:getZipEntries', toIpcResponse(getZipEntries));\r\n\r\n    // Workspace API\r\n    ipcMain.handle('workspace:moveWorkspaceAssignments', toIpcResponse(moveWorkspaceAssignments));\r\n    ipcMain.handle('workspace:updateWorkspaceName', toIpcResponse(updateWorkspaceName));\r\n    ipcMain.handle('workspace:createWorkingFolder', toIpcResponse(createWorkingFolder));\r\n    ipcMain.handle('workspace:getWorkspaces', toIpcResponse(getWorkspaces));\r\n    ipcMain.handle('workspace:deleteWorkspace', toIpcResponse(deleteWorkspace));\r\n    ipcMain.handle('workspace:deleteWorkspaceCheck', toIpcResponse(deleteWorkspaceCheck));\r\n\r\n    // Comments API\r\n    ipcMain.handle('comments:getComments', toIpcResponse(getComments));\r\n    ipcMain.handle('comments:deleteComment', toIpcResponse(deleteComment));\r\n    ipcMain.handle('comments:addComment', toIpcResponse(addComment));\r\n\r\n    // Config API\r\n    ipcMain.handle('config:getConfig', toIpcResponse(getConfig));\r\n    ipcMain.handle('config:updateConfig', toIpcResponse(updateConfig));\r\n\r\n\r\n    // Application API\r\n    ipcMain.handle('app:saveFile', toIpcResponse(saveFile));\r\n    ipcMain.handle('app:version', toIpcResponse(getVersion));\r\n    ipcMain.handle('app:getFolder', toIpcResponse(getFolder));\r\n    ipcMain.handle('app:getFile', toIpcResponse(getFile));\r\n    ipcMain.handle('app:openExternalLink', toIpcResponse(openExternalLink));\r\n\r\n\r\n    // Update API\r\n    ipcMain.handle('update:check', toIpcResponse(checkForUpdates));\r\n    ipcMain.handle('update:download', toIpcResponse(downloadUpdate));\r\n    ipcMain.on('update:restart', () => {\r\n      autoUpdater.quitAndInstall();\r\n    });\r\n  });\r\n\r\n  // Quit when all windows are closed.\r\n  app.on('window-all-closed', () => {\r\n    // On OS X it is common for applications and their menu bar\r\n    // to stay active until the user quits explicitly with Cmd + Q\r\n    if (process.platform !== 'darwin') {\r\n      app.quit();\r\n    }\r\n  });\r\n\r\n  app.on('activate', () => {\r\n    // On OS X it's common to re-create a window in the app when the\r\n    // dock icon is clicked and there are no other windows open.\r\n    if (mainWindow === null) {\r\n      createWindow();\r\n    }\r\n  });\r\n\r\n  autoUpdater.on('error', err => {\r\n    logger.error('AutoUpdater error');\r\n    logger.error(err);\r\n  });\r\n\r\n\r\n} catch (e) {\r\n  console.error(e);\r\n  // Catch Error\r\n  // throw e;\r\n}\r\n","import {sep} from 'path';\r\n\r\nexport const CONFIG_FILE = 'config.json';\r\n\r\nexport const RUBRICS_FILE = 'rubrics.json';\r\nexport const APP_DATA_DIR = process.env.APPDATA || (process.platform === 'darwin' ? process.env.HOME +\r\n  '/Library/Preferences' : process.env.HOME + '/.local/share');\r\nexport const CONFIG_DIR = APP_DATA_DIR + sep + 'pdf-config' + sep;\r\nexport const COMMENTS_FILE = 'comments.json';\r\n\r\n/*COMMON MESSAGES*/\r\nexport const INVALID_RUBRIC_JSON_FILE = 'Rubric file is not a valid JSON file!';\r\nexport const COULD_NOT_CREATE_RUBRIC_FILE = 'Failed to read rubric file!';\r\nexport const COULD_NOT_READ_RUBRIC_LIST = 'Could not read list of rubrics!';\r\nexport const NOT_PROVIDED_RUBRIC = 'Rubric must be provided!';\r\nexport const COULD_NOT_CREATE_CONFIG_DIRECTORY = 'Failed to create configuration directory!';\r\nexport const NOT_CONFIGURED_CONFIG_DIRECTORY = 'Configure default location to extract files to on the settings page!';\r\nexport const EXTRACTED_ZIP = 'Successfully extracted assignment to selected workspace!';\r\nexport const EXTRACTED_ZIP_BUT_FAILED_TO_WRITE_TO_RUBRIC = 'Successfully extracted assignment to selected workspace! ' +\r\n  'But Failed to write to rubrics file!';\r\nexport const INVALID_STUDENT_FOLDER = 'Invalid student folder';\r\n\r\nexport const COULD_NOT_READ_COMMENT_LIST = 'Could not read list of comments!';\r\nexport const NOT_PROVIDED_COMMENT = 'Comment must be provided!';\r\n\r\nexport const HIGHLIGHT_HEIGHT = 20;\r\nexport const STUDENT_DIRECTORY_ID_REGEX = /.*\\((.+)\\)/;\r\nexport const STUDENT_DIRECTORY_REGEX = /(.*), (.*)\\((.+)\\)/;\r\nexport const STUDENT_DIRECTORY_NO_NAME_REGEX = /(.*),\\((.+)\\)/;\r\n","import {writeFile} from 'fs/promises';\r\n\r\nimport {app, BrowserWindow, dialog, IpcMainInvokeEvent, shell} from 'electron';\r\nimport {AppSelectedPathInfo} from '@shared/info-objects/app-selected-path.info';\r\nimport {AppVersionInfo} from '@shared/info-objects/app-version.info';\r\nimport {basename, extname} from 'path';\r\nimport {statSync} from 'fs';\r\nimport {FileFilterInfo} from '@shared/info-objects/file-filter.info';\r\n\r\n\r\nexport function saveFile (event: IpcMainInvokeEvent, filter: FileFilterInfo): Promise<AppSelectedPathInfo> {\r\n  return dialog.showSaveDialog(BrowserWindow.getFocusedWindow(), {\r\n    defaultPath: filter.filename,\r\n    title: 'Save',\r\n    filters: [\r\n      { name: filter.name, extensions: filter.extension }\r\n    ]\r\n  }).then(({filePath}) => {\r\n    if (filePath) {\r\n      try {\r\n        return writeFile(filePath, new Buffer(filter.buffer as ArrayBuffer))\r\n          .then(() => {\r\n            return { selectedPath: filePath };\r\n          });\r\n      } catch (e) {\r\n        return Promise.reject(e.message);\r\n      }\r\n    } else {\r\n      return { selectedPath: null };\r\n    }\r\n  });\r\n}\r\n\r\nexport function getFolder(): Promise<AppSelectedPathInfo> {\r\n  return dialog.showOpenDialog(BrowserWindow.getFocusedWindow(), {\r\n    title: 'Select Folder',\r\n    properties: ['openDirectory', 'promptToCreate']\r\n  }).then((data) => {\r\n    if (data.canceled) {\r\n      return {selectedPath: null};\r\n    } else {\r\n      return {selectedPath: data.filePaths[0]};\r\n    }\r\n  }, (reason) => {\r\n    return Promise.reject(reason);\r\n  });\r\n}\r\n\r\nexport function getFile(event: IpcMainInvokeEvent, filter: FileFilterInfo): Promise<AppSelectedPathInfo> {\r\n  return dialog.showOpenDialog(BrowserWindow.getFocusedWindow(), {\r\n    title: 'Select File',\r\n    filters: [\r\n      { name: filter.name, extensions: filter.extension }\r\n    ],\r\n    properties: ['openFile']\r\n  }).then((data) => {\r\n    if (data.canceled) {\r\n      return {selectedPath: null};\r\n    } else {\r\n      return {\r\n        selectedPath: data.filePaths[0],\r\n        fileName: basename(data.filePaths[0], extname(data.filePaths[0])),\r\n        ext: extname(data.filePaths[0]),\r\n        basename: basename(data.filePaths[0]),\r\n        info: statSync(data.filePaths[0])\r\n      } as AppSelectedPathInfo;\r\n    }\r\n  }, (reason => {\r\n    return Promise.reject(reason);\r\n  }));\r\n}\r\n\r\nexport function openExternalLink(event: IpcMainInvokeEvent, resource: string): Promise<any> {\r\n  return shell.openExternal(resource).then(() => {\r\n    return { results: true };\r\n  }, (reason) => {\r\n    return Promise.reject(reason);\r\n  });\r\n}\r\n\r\nexport function getVersion(): Promise<AppVersionInfo> {\r\n  return Promise.resolve({version: app.getVersion() });\r\n}\r\n","import {\r\n  accessSync,\r\n  constants,\r\n  existsSync,\r\n  lstatSync,\r\n  mkdirSync,\r\n  mkdtempSync,\r\n  readdirSync,\r\n  readFileSync,\r\n  rmSync,\r\n  statSync,\r\n  unlinkSync,\r\n  writeFileSync\r\n} from 'fs';\r\nimport * as glob from 'glob';\r\nimport {getConfig} from './config.handler';\r\nimport {checkAccess, deleteFolderRecursive, isFolder, isJson, isNullOrUndefined, writeToFile} from '../utils';\r\nimport {\r\n  CONFIG_DIR,\r\n  COULD_NOT_READ_RUBRIC_LIST,\r\n  INVALID_RUBRIC_JSON_FILE,\r\n  INVALID_STUDENT_FOLDER,\r\n  NOT_PROVIDED_RUBRIC,\r\n  RUBRICS_FILE, STUDENT_DIRECTORY_ID_REGEX,\r\n  STUDENT_DIRECTORY_NO_NAME_REGEX,\r\n  STUDENT_DIRECTORY_REGEX,\r\n} from '../constants';\r\nimport * as path from 'path';\r\nimport {basename, dirname, sep} from 'path';\r\nimport {json2csvAsync} from 'json-2-csv';\r\nimport {readFile, stat, writeFile} from 'fs/promises';\r\nimport {find, isNil, map, sortBy} from 'lodash';\r\nimport {IpcMainInvokeEvent} from 'electron';\r\nimport {UpdateAssignment} from '@shared/info-objects/update-assignment';\r\nimport {PDFDocument} from 'pdf-lib';\r\nimport {IRubric} from '@shared/info-objects/rubric.class';\r\nimport {CreateAssignmentInfo, StudentInfo} from '@shared/info-objects/create-assignment.info';\r\nimport {annotatePdfFile} from '../pdf/marking-annotations';\r\nimport {AssignmentSettingsInfo} from '@shared/info-objects/assignment-settings.info';\r\nimport {MarkInfo} from '@shared/info-objects/mark.info';\r\nimport {annotatePdfRubric} from '../pdf/rubric-annotations';\r\nimport {ShareAssignments} from '@shared/info-objects/share-assignments';\r\nimport * as os from 'os';\r\nimport {copySync, readdir} from 'fs-extra';\r\nimport {getAssignmentDirectory} from './workspace.handler';\r\nimport {\r\n  FeedbackAttachments,\r\n  StudentSubmission,\r\n  SubmissionAttachments, TreeNode,\r\n  TreeNodeType,\r\n  Workspace,\r\n  WorkspaceAssignment,\r\n  WorkspaceFile\r\n} from '@shared/info-objects/workspace';\r\nimport {\r\n  DEFAULT_WORKSPACE,\r\n  FEEDBACK_FOLDER,\r\n  GRADES_FILE,\r\n  MARK_FILE,\r\n  PDFM_FILE_SORT,\r\n  SETTING_FILE,\r\n  SUBMISSION_FOLDER\r\n} from '@shared/constants/constants';\r\nimport {\r\n  MarkingSubmissionInfo,\r\n  RubricSubmissionInfo,\r\n  SubmissionInfo,\r\n  SubmissionInfoVersion,\r\n  SubmissionType\r\n} from '@shared/info-objects/submission.info';\r\nimport {getComments, updateCommentsFile} from './comment.handler';\r\nimport {findRubric} from './rubric.handler';\r\n\r\nconst zipDir = require('zip-dir');\r\n\r\nconst csvtojson = require('csvtojson');\r\n\r\n\r\n\r\nexport function getAssignments(): Promise<Workspace[]> {\r\n  return loadWorkspaces();\r\n}\r\n\r\nfunction loadFiles(directory: string, parent: TreeNode): Promise<WorkspaceFile[]> {\r\n  return readdir(directory).then(files => {\r\n    const workspaceFiles: WorkspaceFile[] = [];\r\n    const promises: Promise<any>[] = map(files, (file) => {\r\n      return stat(directory + sep + file).then(fileStat => {\r\n        if (fileStat.isFile()) {\r\n          workspaceFiles.push({\r\n            type: TreeNodeType.FILE,\r\n            dateModified: fileStat.mtime,\r\n            name: file,\r\n            children: [],\r\n            parent\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return Promise.all(promises).then(() => workspaceFiles);\r\n  });\r\n}\r\n\r\nfunction loadAssignmentContents(directoryFullPath: string, parent: Workspace): Promise<WorkspaceAssignment> {\r\n  const assignment: WorkspaceAssignment = {\r\n    type: TreeNodeType.ASSIGNMENT,\r\n    dateModified: null,\r\n    name: basename(directoryFullPath),\r\n    children: [],\r\n    parent\r\n  };\r\n  return readdir(directoryFullPath).then((files) => {\r\n    const promises: Promise<any>[] = map(files, (file) => {\r\n      const fullPath = directoryFullPath + sep + file;\r\n      return stat(fullPath).then((fileStats) => {\r\n        if (fileStats.isFile()) {\r\n          assignment.children.push({\r\n            type: TreeNodeType.FILE,\r\n            name: file,\r\n            dateModified: fileStats.mtime,\r\n            children: [],\r\n            parent: assignment\r\n          });\r\n        } else {\r\n          // It must be a submission\r\n          let studentId: string;\r\n          let studentName: string;\r\n          let studentSurname: string;\r\n\r\n          let matches = STUDENT_DIRECTORY_REGEX.exec(file);\r\n          if (matches !== null) {\r\n            studentId = matches[3];\r\n            studentName =  matches[2];\r\n            studentSurname = matches[1];\r\n          } else {\r\n            matches = STUDENT_DIRECTORY_NO_NAME_REGEX.exec(file);\r\n            if (matches !== null) {\r\n              studentId = matches[2];\r\n              studentSurname =  matches[1];\r\n            }\r\n          }\r\n\r\n          if (matches === null) {\r\n            return Promise.reject(`Student directory not in expected format '${file}'`);\r\n          }\r\n\r\n          const submission: StudentSubmission = {\r\n            dateModified: null,\r\n            type: TreeNodeType.SUBMISSION,\r\n            name: file,\r\n            studentId,\r\n            studentName,\r\n            studentSurname,\r\n            children: [],\r\n            parent: assignment\r\n          };\r\n          assignment.children.push(submission);\r\n          const feedbackNode: FeedbackAttachments = {\r\n            name: FEEDBACK_FOLDER,\r\n            type: TreeNodeType.FEEDBACK_DIRECTORY,\r\n            children: [],\r\n            dateModified: null,\r\n            parent: submission\r\n          };\r\n          submission.children.push(feedbackNode);\r\n\r\n          const submissionAttachments: SubmissionAttachments = {\r\n            name: SUBMISSION_FOLDER,\r\n            type: TreeNodeType.SUBMISSIONS_DIRECTORY,\r\n            children: [],\r\n            dateModified: null,\r\n            parent: submission\r\n          };\r\n          submission.children.push(submissionAttachments);\r\n\r\n\r\n          return Promise.all([\r\n            loadFiles(fullPath, submission).then(nodes => submission.children.push(...nodes)),\r\n            loadFiles(fullPath + sep + FEEDBACK_FOLDER, feedbackNode).then(nodes => feedbackNode.children = nodes),\r\n            loadFiles(fullPath + sep + SUBMISSION_FOLDER, submissionAttachments).then(nodes => submissionAttachments.children = nodes),\r\n          ]).then(() => {\r\n            submission.children.sort(PDFM_FILE_SORT);\r\n            return submission;\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return Promise.all(promises);\r\n  }).then(() => {\r\n    assignment.children.sort(PDFM_FILE_SORT);\r\n    return assignment;\r\n  });\r\n}\r\n\r\nfunction loadWorkspaceContents(directoryFullPath: string): Promise<Workspace> {\r\n  // This directory is a workspace\r\n  const workspace: Workspace = {\r\n    type: TreeNodeType.WORKSPACE,\r\n    dateModified: null,\r\n    name: basename(directoryFullPath),\r\n    children: [],\r\n    parent: null\r\n  };\r\n\r\n  return readdir(directoryFullPath).then((assignments) => {\r\n    const promises = map(assignments, assignment => {\r\n      return loadAssignmentContents(directoryFullPath + sep + assignment, workspace)\r\n        .then(a => workspace.children.push(a));\r\n    });\r\n\r\n    return Promise.all(promises)\r\n      .then(() => {\r\n        workspace.children.sort(PDFM_FILE_SORT);\r\n        return workspace;\r\n      });\r\n  });\r\n}\r\n\r\nfunction loadWorkspaces(): Promise<Workspace[]> {\r\n  return getConfig().then((config) => {\r\n    const defaultWorkspace: Workspace = {\r\n      type: TreeNodeType.WORKSPACE,\r\n      name: DEFAULT_WORKSPACE,\r\n      dateModified: null,\r\n      children: [],\r\n      parent: null\r\n    };\r\n    const workspaceFolders = config.folders || [];\r\n    const workspaces: Workspace[] = [defaultWorkspace];\r\n\r\n    return readdir(config.defaultPath).then((foundDirectories) => {\r\n      const promises: Promise<any>[] = map(foundDirectories, (directory) => {\r\n        const fullPath = config.defaultPath + sep + directory;\r\n        // Check if the directory is a working directory\r\n        if (workspaceFolders.includes(fullPath)) {\r\n          return loadWorkspaceContents(fullPath)\r\n            .then(workspace => workspaces.push(workspace));\r\n        } else {\r\n          return loadAssignmentContents(fullPath, defaultWorkspace)\r\n            .then(a => defaultWorkspace.children.push(a));\r\n        }\r\n      });\r\n      return Promise.all(promises).then(() => {\r\n        return sortBy(workspaces, 'name');\r\n      }, (error) => {\r\n        console.error(error);\r\n        return Promise.reject(error);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n\r\nexport function saveMarks(event: IpcMainInvokeEvent, location: string, submissionInfo: SubmissionInfo): Promise<string> {\r\n\r\n  if (submissionInfo.type === SubmissionType.MARK) {\r\n\r\n    const marksPerPage = submissionInfo.marks as MarkInfo[][];\r\n\r\n    return getComments().then((comments) => {\r\n      let updateComments = false;\r\n      let totalMark = 0;\r\n      marksPerPage.forEach((pageMarks) => {\r\n        if (Array.isArray(pageMarks)) {\r\n          for (let i = 0; i < pageMarks.length; i++) {\r\n            totalMark += (pageMarks[i] && pageMarks[i].totalMark) ? pageMarks[i].totalMark : 0;\r\n\r\n            comments.forEach(comment => {\r\n              // Try and mark a comment as in use\r\n              if (pageMarks[i].comment && pageMarks[i].comment.includes(comment.title) && !comment.inUse) {\r\n                updateComments = true;\r\n                comment.inUse = true;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      let promise: Promise<any> = Promise.resolve();\r\n      if (updateComments) {\r\n        promise = promise.then(() => updateCommentsFile(comments));\r\n      }\r\n\r\n      return promise.then(() => saveToMarks(location, submissionInfo, totalMark));\r\n    });\r\n  } else if (submissionInfo.type === SubmissionType.RUBRIC) {\r\n    const assignmentDirectory = dirname(location);\r\n    return workspaceRelativePathToAbsolute(assignmentDirectory).then((assignmentSettingsPath) => {\r\n      return getAssignmentSettingsAt(assignmentSettingsPath)\r\n        .then((assignmentSettingsInfo) => {\r\n\r\n          if (isNil(assignmentSettingsInfo.rubric)) {\r\n            return Promise.reject('Assignment\\'s settings does not contain a rubric!');\r\n          }\r\n          let totalMark = 0;\r\n          const marks = submissionInfo.marks as number[];\r\n          marks.forEach((levelIndex: number, index: number) => {\r\n            if (levelIndex !== null) {\r\n              totalMark += parseFloat('' + assignmentSettingsInfo.rubric.criterias[index].levels[levelIndex].score);\r\n            }\r\n          });\r\n          return saveToMarks(location, submissionInfo, totalMark);\r\n        });\r\n    });\r\n  } else {\r\n    return Promise.reject('Unknown submission info type');\r\n  }\r\n}\r\n\r\nfunction saveSubmissionInfo(studentLocation: string, submissionInfo: SubmissionInfo): Promise<SubmissionInfo> {\r\n  return writeFile(studentLocation + sep + MARK_FILE, JSON.stringify(submissionInfo))\r\n    .then(() => submissionInfo, () => Promise.reject('Failed to save student marks!'));\r\n}\r\n\r\nfunction saveToMarks(studentLocation: string, marks: SubmissionInfo, totalMark: number): Promise<string> {\r\n\r\n  return workspaceRelativePathToAbsolute(studentLocation).then((studentFolder) => {\r\n    return checkAccess(studentFolder).then(() => {\r\n\r\n      return saveSubmissionInfo(studentFolder, marks).then(() => {\r\n        const assignmentFolder = dirname(studentFolder);\r\n\r\n        return checkAccess(assignmentFolder + sep + GRADES_FILE).then(() => {\r\n\r\n          const studentDirectoryName = basename(studentFolder);\r\n          const matches = STUDENT_DIRECTORY_ID_REGEX.exec(studentDirectoryName);\r\n          const studentNumber = matches[1] + '';\r\n\r\n          return csvtojson({noheader: true, trim: false}).fromFile(assignmentFolder + sep + GRADES_FILE)\r\n            .then((gradesJSON) => {\r\n              let changed = false;\r\n              let assignmentHeader;\r\n              if (gradesJSON.length < 3 || Object.keys(gradesJSON[2]).length < 4) {\r\n                return Promise.reject('grades.csv file appears to be corrupt');\r\n              }\r\n\r\n              for (let i = 0; i < gradesJSON.length; i++) {\r\n                if (i === 0) {\r\n                  const keys = Object.keys(gradesJSON[i]);\r\n                  if (keys.length > 0) {\r\n                    assignmentHeader = keys[0];\r\n                  }\r\n                } else if (i > 1 && !isNullOrUndefined(assignmentHeader) && gradesJSON[i] && gradesJSON[i][assignmentHeader].toUpperCase() === studentNumber.toUpperCase()) {\r\n                  gradesJSON[i].field5 = totalMark;\r\n                  changed = true;\r\n\r\n                }\r\n              }\r\n\r\n              if (changed) {\r\n                // more logic to save new JSON to CSV\r\n                return json2csvAsync(gradesJSON, {emptyFieldValue: '', prependHeader: false}).then((csv) => {\r\n                  return writeToFile(assignmentFolder + sep + GRADES_FILE, csv, 'Successfully saved marks!', 'Failed to save marks to ' + GRADES_FILE + ' file!');\r\n                }, () => {\r\n                  return Promise.reject('Failed to convert json to csv!');\r\n                });\r\n              } else {\r\n                return Promise.reject(`Could not find student ${studentNumber} in grades.csv`);\r\n              }\r\n            }, reason => {\r\n              return Promise.reject( reason);\r\n            });\r\n        });\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction convertMarks(marks: any, studentFolderFullPath: string): Promise<SubmissionInfo> {\r\n\r\n  let submissionInfo: SubmissionInfo;\r\n  if (marks.version !== SubmissionInfoVersion) {\r\n\r\n    return getAssignmentSettingsAt(dirname(studentFolderFullPath)).then((assignmentSettings) => {\r\n\r\n      let promise: Promise<any> = Promise.resolve();\r\n      if (!marks.hasOwnProperty('version')) {\r\n        // This is the original .marks.json convert it to version 1\r\n        if (assignmentSettings.rubric) {\r\n          const rubricSubmissionInfo = new RubricSubmissionInfo(1);\r\n          rubricSubmissionInfo.marks = marks;\r\n          submissionInfo = rubricSubmissionInfo;\r\n        } else {\r\n          const markingSubmissionInfo = new MarkingSubmissionInfo(1);\r\n          markingSubmissionInfo.marks = marks;\r\n          submissionInfo = markingSubmissionInfo;\r\n        }\r\n        promise = promise.then(() => saveSubmissionInfo(studentFolderFullPath, submissionInfo));\r\n      }\r\n      /*\r\n       if (marks.version === 1) {\r\n         // Convert to from v 1 to version 2\r\n         submissionInfo = upgradedV2;\r\n          promise = promise.then(() => saveSubmissionInfo(studentFolder, submissionInfo));\r\n       }\r\n\r\n       if (marks.version === 2) {\r\n         // Convert to from v 2 to version 3\r\n         submissionInfo = upgradedV3;\r\n          promise = promise.then(() => saveSubmissionInfo(studentFolder, submissionInfo));\r\n       }\r\n       */\r\n\r\n\r\n      return promise;\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  return Promise.resolve(marks);\r\n}\r\n\r\n\r\nexport function loadMarks(studentFolder: string): Promise<SubmissionInfo> {\r\n  return workspaceRelativePathToAbsolute(studentFolder).then((absolutePath) => {\r\n    return loadMarksAt(absolutePath);\r\n  });\r\n}\r\nexport function loadMarksAt(studentFolderFull: string): Promise<SubmissionInfo> {\r\n  return readFile(studentFolderFull + sep + MARK_FILE).then((data) => {\r\n    if (!isJson(data)) {\r\n      return [];\r\n    } else {\r\n      const marks = JSON.parse(data.toString());\r\n      if (marks.version !== SubmissionInfoVersion) {\r\n        return convertMarks(marks, studentFolderFull);\r\n      }\r\n      return marks;\r\n    }\r\n  }, (err) => {\r\n    return convertMarks([], studentFolderFull);\r\n  });\r\n}\r\n\r\nexport function getMarks(event: IpcMainInvokeEvent, studentFolder: string): Promise<SubmissionInfo> {\r\n  return loadMarks(studentFolder);\r\n}\r\n\r\n\r\n\r\n// Only For updating colour for now\r\nexport function updateAssignmentSettings(event: IpcMainInvokeEvent, updatedSettings: any = {}, workspaceName: string, assignmentName: string): Promise<any> {\r\n\r\n  if (JSON.stringify(updatedSettings) === JSON.stringify({})) {\r\n    return Promise.resolve();\r\n  }\r\n\r\n  return getAssignmentSettingsFor(workspaceName, assignmentName)\r\n    .then((originalSettings) => {\r\n      originalSettings.defaultColour = (updatedSettings.defaultColour) ? updatedSettings.defaultColour : originalSettings.defaultColour;\r\n      return writeAssignmentSettingsFor(originalSettings, workspaceName, assignmentName);\r\n    });\r\n}\r\n\r\n\r\n\r\nexport function updateAssignment(event: IpcMainInvokeEvent, updateRequest: UpdateAssignment): Promise<any> {\r\n  const assignmentName: string = updateRequest.assignmentName.trim();\r\n  try {\r\n    return getConfig().then(async (config) => {\r\n      let assignmentSettingsBuffer;\r\n      if (updateRequest.workspace === DEFAULT_WORKSPACE || isNil(updateRequest.workspace)) {\r\n        assignmentSettingsBuffer = readFileSync(config.defaultPath + sep + assignmentName + sep + SETTING_FILE);\r\n        if (!isJson(assignmentSettingsBuffer)) {\r\n          return Promise.reject('Invalid assignment settings file!');\r\n        }\r\n\r\n      } else {\r\n        assignmentSettingsBuffer = readFileSync(config.defaultPath + sep + updateRequest.workspace + sep + assignmentName + sep + SETTING_FILE);\r\n        if (!isJson(assignmentSettingsBuffer)) {\r\n          return Promise.reject('Invalid assignment settings file!');\r\n        }\r\n      }\r\n      const assignmentSettingsInfo: AssignmentSettingsInfo = JSON.parse(assignmentSettingsBuffer.toString());\r\n      if (!assignmentSettingsInfo.isCreated) {\r\n        return Promise.reject('Operation not permitted on this type of assignment!');\r\n      }\r\n\r\n      if (updateRequest.studentDetails.length !== updateRequest.files.length) {\r\n        return Promise.reject( `Student details is not equal to number of files sent!`);\r\n      }\r\n\r\n      const grades = await csvtojson({\r\n        noheader: true,\r\n        trim: false\r\n      }).fromFile(\r\n        (updateRequest.workspace === DEFAULT_WORKSPACE || isNil(updateRequest.workspace)) ?\r\n          config.defaultPath + sep + assignmentName + sep + GRADES_FILE :\r\n          config.defaultPath + sep + updateRequest.workspace + sep + assignmentName + sep + GRADES_FILE);\r\n\r\n      let count = 0;\r\n      const headers = `'${assignmentName}','SCORE_GRADE_TYPE'\\n`;\r\n      const line = `''\\n`;\r\n      const subheaders = `'Display ID','ID','Last Name','First Name','Mark','Submission date','Late submission'\\n`;\r\n      let csvString = headers + line + subheaders;\r\n      for (const studentInfo of updateRequest.studentDetails) {\r\n        const file: any = updateRequest.files[count];\r\n        const studentFolder = studentInfo.studentSurname.toUpperCase() + ', ' + studentInfo.studentName.toUpperCase() + '(' + studentInfo.studentId.toUpperCase() + ')';\r\n        const feedbackFolder = studentFolder + sep + FEEDBACK_FOLDER;\r\n        const submissionFolder = studentFolder + sep + SUBMISSION_FOLDER;\r\n        let csvData = '';\r\n\r\n        if (updateRequest.workspace === DEFAULT_WORKSPACE || isNil(updateRequest.workspace)) {\r\n          if (existsSync(config.defaultPath + sep + assignmentName + sep + studentFolder)) {\r\n            if (studentInfo.remove) {\r\n              deleteFolderRecursive(config.defaultPath + sep + assignmentName + sep + studentFolder);\r\n            } else {\r\n              const studentRecord = grades.find(grade => grade[Object.keys(grades[0])[0]] === studentInfo.studentId.toUpperCase());\r\n              if (studentRecord) {\r\n                csvData = `${studentInfo.studentId.toUpperCase()},${studentInfo.studentId.toUpperCase()},${studentInfo.studentSurname.toUpperCase()},${studentInfo.studentName.toUpperCase()},${studentRecord.field5},,\\n`;\r\n              } else {\r\n                csvData = `${studentInfo.studentId.toUpperCase()},${studentInfo.studentId.toUpperCase()},${studentInfo.studentSurname.toUpperCase()},${studentInfo.studentName.toUpperCase()},,,\\n`;\r\n              }\r\n            }\r\n          } else {\r\n            const filename = basename(file);\r\n            mkdirSync(config.defaultPath + sep + assignmentName + sep + feedbackFolder, {recursive: true});\r\n            mkdirSync(config.defaultPath + sep + assignmentName + sep + submissionFolder, {recursive: true});\r\n\r\n            const content = readFileSync(file);\r\n            const pdfDoc = await PDFDocument.load(content);\r\n            const pdfBytes = await pdfDoc.save();\r\n            await writeFileSync(config.defaultPath + sep + assignmentName + sep + submissionFolder + sep + filename, pdfBytes);\r\n            // copyFileSync(file.path, config.defaultPath + sep + assignmentName + sep + submissionFolder + sep + file.originalname);\r\n            csvData = `${studentInfo.studentId.toUpperCase()},${studentInfo.studentId.toUpperCase()},${studentInfo.studentSurname.toUpperCase()},${studentInfo.studentName.toUpperCase()},,,\\n`;\r\n          }\r\n        } else {\r\n          if (existsSync(config.defaultPath + sep + updateRequest.workspace + sep + assignmentName + sep + studentFolder)) {\r\n            if (studentInfo.remove) {\r\n              deleteFolderRecursive(config.defaultPath + sep + updateRequest.workspace + sep + assignmentName + sep + studentFolder);\r\n            } else {\r\n              const studentRecord = grades.find(grade => grade[Object.keys(grades[0])[0]] === studentInfo.studentId.toUpperCase());\r\n              if (studentRecord) {\r\n                csvData = `${studentInfo.studentId.toUpperCase()},${studentInfo.studentId.toUpperCase()},${studentInfo.studentSurname.toUpperCase()},${studentInfo.studentName.toUpperCase()},${studentRecord.field5},,\\n`;\r\n              } else {\r\n                csvData = `${studentInfo.studentId.toUpperCase()},${studentInfo.studentId.toUpperCase()},${studentInfo.studentSurname.toUpperCase()},${studentInfo.studentName.toUpperCase()},,,\\n`;\r\n              }\r\n            }\r\n          } else {\r\n            const filename = basename(file);\r\n            mkdirSync(config.defaultPath + sep + updateRequest.workspace + sep + assignmentName + sep + feedbackFolder, {recursive: true});\r\n            mkdirSync(config.defaultPath + sep + updateRequest.workspace + sep + assignmentName + sep + submissionFolder, {recursive: true});\r\n\r\n            const content = readFileSync(file);\r\n            const pdfDoc = await PDFDocument.load(content);\r\n            const pdfBytes = await pdfDoc.save();\r\n            await writeFileSync(config.defaultPath + sep + updateRequest.workspace + sep + assignmentName + sep + submissionFolder + sep + filename, pdfBytes);\r\n            // copyFileSync(file.path, config.defaultPath + sep + assignmentName + sep + submissionFolder + sep + file.originalname);\r\n            csvData = `${studentInfo.studentId.toUpperCase()},${studentInfo.studentId.toUpperCase()},${studentInfo.studentSurname.toUpperCase()},${studentInfo.studentName.toUpperCase()},,,\\n`;\r\n          }\r\n        }\r\n        csvString += csvData;\r\n        count++;\r\n      }\r\n\r\n      //\r\n      if (updateRequest.workspace === DEFAULT_WORKSPACE || isNil(updateRequest.workspace)) {\r\n        writeFileSync(config.defaultPath + sep + assignmentName + sep + GRADES_FILE, csvString);\r\n        return ;\r\n      } else {\r\n        writeFileSync(config.defaultPath + sep + updateRequest.workspace + sep + assignmentName + sep + GRADES_FILE, csvString);\r\n        return;\r\n      }\r\n\r\n    });\r\n  } catch (e) {\r\n    return Promise.reject(e.message);\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function createAssignment(event: IpcMainInvokeEvent, createInfo: CreateAssignmentInfo): Promise<any> {\r\n\r\n  let assignmentName: string = createInfo.assignmentName.trim();\r\n\r\n  try {\r\n    return getConfig().then(async (config) => {\r\n      const folders = glob.sync(config.defaultPath + '/*');\r\n\r\n      let foundCount = 0;\r\n      for (let i = 0; i < folders.length; i++) {\r\n        if (isFolder(folders[i])) {\r\n          const assignmentDirectoryName = path.basename(folders[i]);\r\n          // Doing a casesensitive check on the directory names - for Window's sake\r\n          if (assignmentName.toLowerCase() === assignmentDirectoryName.toLowerCase()) {\r\n            foundCount++;\r\n\r\n            // Doing a casesensitive check on the directory names - for Window's sake\r\n          } else if ((assignmentName.toLowerCase() + ' (' + (foundCount + 1) + ')') === assignmentDirectoryName.toLowerCase()) {\r\n            foundCount++;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (foundCount > 0) {\r\n        assignmentName = assignmentName + ' (' + (foundCount + 1) + ')';\r\n      }\r\n\r\n      const noRubric: boolean = createInfo.noRubric;\r\n      let rubricName: string;\r\n      let rubric: IRubric = null;\r\n      let rubricIndex: number;\r\n      let rubrics: IRubric[];\r\n\r\n      if (!noRubric) {\r\n        if (isNil(createInfo.rubric)) {\r\n          return Promise.reject(NOT_PROVIDED_RUBRIC);\r\n        }\r\n\r\n        rubricName = createInfo.rubric.trim();\r\n        if (!isNullOrUndefined(rubricName)) {\r\n          const rubricData = readFileSync(CONFIG_DIR + RUBRICS_FILE);\r\n          try {\r\n            if (!isJson(rubricData)) {\r\n              return Promise.reject(INVALID_RUBRIC_JSON_FILE);\r\n            }\r\n\r\n            rubrics = JSON.parse(rubricData.toString());\r\n\r\n            if (Array.isArray(rubrics)) {\r\n              let index = -1;\r\n              for (let i = 0; i < rubrics.length; i++) {\r\n                if (rubrics[i].name === rubricName) {\r\n                  index = i;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              if (index !== -1) {\r\n                rubric = rubrics[index];\r\n                rubricIndex = index;\r\n              }\r\n            } else {\r\n              return Promise.reject(COULD_NOT_READ_RUBRIC_LIST);\r\n            }\r\n\r\n          } catch (e) {\r\n            return Promise.reject(e.message);\r\n          }\r\n        }\r\n      }\r\n      const studentDetails: StudentInfo[] = createInfo.studentRow;\r\n\r\n      if (!Array.isArray(studentDetails)) {\r\n        return Promise.reject(`Student details must be a list`);\r\n      }\r\n\r\n      if (studentDetails.length !== createInfo.files.length) {\r\n        return Promise.reject(`Student details is not equal to number of files sent!`);\r\n      }\r\n\r\n      const settings: AssignmentSettingsInfo = {defaultColour: '#3b487d', rubric, isCreated: true};\r\n\r\n      let count = 0;\r\n      const headers = `'${assignmentName}','SCORE_GRADE_TYPE'\\n`;\r\n      const line = `''\\n`;\r\n      const subheaders = `'Display ID','ID','Last Name','First Name','Mark','Submission date','Late submission'\\n`;\r\n      let csvString = headers + line + subheaders;\r\n      for (const studentInfo of studentDetails) {\r\n        const file: any = createInfo.files[count];\r\n        const studentFolder = studentInfo.studentSurname.toUpperCase() + ', ' + studentInfo.studentName.toUpperCase() + '(' + studentInfo.studentId.toUpperCase() + ')';\r\n        const feedbackFolder = studentFolder + sep + FEEDBACK_FOLDER;\r\n        const submissionFolder = studentFolder + sep + SUBMISSION_FOLDER;\r\n        const csvData = `${studentInfo.studentId.toUpperCase()},${studentInfo.studentId.toUpperCase()},${studentInfo.studentSurname.toUpperCase()},${studentInfo.studentName.toUpperCase()},,,\\n`;\r\n        csvString += csvData;\r\n\r\n        if (createInfo.workspace === DEFAULT_WORKSPACE || isNil(createInfo.workspace)) {\r\n          const filename = basename(file);\r\n          mkdirSync(config.defaultPath + sep + assignmentName + sep + feedbackFolder, {recursive: true});\r\n          mkdirSync(config.defaultPath + sep + assignmentName + sep + submissionFolder, {recursive: true});\r\n          const content = readFileSync(file);\r\n          const pdfDoc = await PDFDocument.load(content);\r\n          const pdfBytes = await pdfDoc.save();\r\n          await writeFileSync(config.defaultPath + sep + assignmentName + sep + submissionFolder + sep + filename, pdfBytes);\r\n          count++;\r\n        } else {\r\n          const filename = basename(file);\r\n          mkdirSync(config.defaultPath + sep + createInfo.workspace + sep + assignmentName + sep + feedbackFolder, {recursive: true});\r\n          mkdirSync(config.defaultPath + sep + createInfo.workspace + sep + assignmentName + sep + submissionFolder, {recursive: true});\r\n          const content = readFileSync(file);\r\n          const pdfDoc = await PDFDocument.load(content);\r\n          const pdfBytes = await pdfDoc.save();\r\n          await writeFileSync(config.defaultPath + sep + createInfo.workspace + sep + assignmentName + sep + submissionFolder + sep + filename, pdfBytes);\r\n          count++;\r\n        }\r\n      }\r\n\r\n      if (createInfo.workspace === DEFAULT_WORKSPACE || isNil(createInfo.workspace)) {\r\n        writeFileSync(config.defaultPath + sep + assignmentName + sep + GRADES_FILE, csvString);\r\n        writeFileSync(config.defaultPath + sep + assignmentName + sep + SETTING_FILE, JSON.stringify(settings));\r\n        return;\r\n      } else {\r\n        writeFileSync(config.defaultPath + sep + createInfo.workspace + sep + assignmentName + sep + GRADES_FILE, csvString);\r\n        writeFileSync(config.defaultPath + sep + createInfo.workspace + sep + assignmentName + sep + SETTING_FILE, JSON.stringify(settings));\r\n        return;\r\n      }\r\n\r\n    });\r\n  } catch (e) {\r\n    return Promise.reject(e.message);\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function getGrades(event: IpcMainInvokeEvent, workspaceName: string, assignmentName: string): Promise<any> {\r\n\r\n  return getAssignmentDirectory(workspaceName, assignmentName).then((assignmentFolder) => {\r\n    return checkAccess(assignmentFolder + sep + GRADES_FILE).then(() => {\r\n      return csvtojson({noheader: true, trim: false}).fromFile(assignmentFolder + sep + GRADES_FILE);\r\n    });\r\n  });\r\n}\r\n\r\nfunction setDateFinalized(assignmentFolder: string): Promise<any> {\r\n  return getAssignmentSettingsAt(assignmentFolder).then((assignmentSettings) => {\r\n    assignmentSettings.dateFinalized = new Date().toISOString();\r\n    return writeAssignmentSettingsAt(assignmentSettings, assignmentFolder);\r\n  });\r\n}\r\n\r\nfunction getAssignmentSettingsAt(assignmentFolder: string): Promise<any> {\r\n  assignmentFolder = assignmentFolder.replace(/\\//g, sep);\r\n  if (existsSync(assignmentFolder)) {\r\n    return readFile(assignmentFolder + sep + SETTING_FILE).then((data) => {\r\n      if (!isJson(data)) {\r\n        return Promise.reject('Assignment settings is not JSON');\r\n      }\r\n      return JSON.parse(data.toString());\r\n    }, (error) => {\r\n      return Promise.reject(error.message);\r\n    });\r\n  } else {\r\n    return Promise.reject('Could not load assignment settings');\r\n  }\r\n}\r\n\r\nfunction getAssignmentSettingsFor(workspaceName: string, assignmentName: string): Promise<AssignmentSettingsInfo> {\r\n  return getAssignmentDirectory(workspaceName, assignmentName)\r\n    .then((directory) => getAssignmentSettingsAt(directory));\r\n}\r\n\r\n\r\nexport function getAssignmentSettings(\r\n  event: IpcMainInvokeEvent,\r\n  workspaceName: string,\r\n  assignmentName: string): Promise<AssignmentSettingsInfo> {\r\n  return getAssignmentSettingsFor(workspaceName, assignmentName);\r\n}\r\n\r\n\r\nexport function getAssignmentGlobalSettings(event: IpcMainInvokeEvent, location: string): Promise<AssignmentSettingsInfo> {\r\n  return getAssignmentSettingsAt(location);\r\n}\r\n\r\nfunction writeAssignmentSettingsAt(assignmentSettings: AssignmentSettingsInfo, location: string): Promise<AssignmentSettingsInfo> {\r\n  const buffer = new Uint8Array(Buffer.from(JSON.stringify(assignmentSettings)));\r\n\r\n  return writeToFile(location + sep + SETTING_FILE, buffer, null, 'Failed to save assignment settings!').then(() => {\r\n    return assignmentSettings;\r\n  });\r\n}\r\n\r\nfunction writeAssignmentSettingsFor(\r\n  assignmentSettings: AssignmentSettingsInfo,\r\n  workspaceName: string,\r\n  assignmentName: string): Promise<AssignmentSettingsInfo> {\r\n  return getAssignmentDirectory(workspaceName, assignmentName)\r\n    .then((assignmentDirectory) => writeAssignmentSettingsAt(assignmentSettings, assignmentDirectory));\r\n}\r\n\r\nexport function finalizeAssignment(event: IpcMainInvokeEvent, workspaceFolder: string, location: string): Promise<any> {\r\n  try {\r\n    return Promise.all([\r\n      getConfig(),\r\n      getAssignmentDirectory(workspaceFolder, location)\r\n    ]).then(([config, assignmentFolder]) => {\r\n      return csvtojson({noheader: true, trim: false}).fromFile(assignmentFolder + sep + GRADES_FILE).then((gradesJSON) => {\r\n        const files = glob.sync(assignmentFolder + sep + '/*');\r\n        const promises: Promise<any>[] = files.map((file) => {\r\n          if (statSync(file).isDirectory()) {\r\n            const regEx = /(.*)\\((.+)\\)$/;\r\n            if (!regEx.test(file)) {\r\n              return Promise.reject(INVALID_STUDENT_FOLDER + ' ' + basename(file));\r\n            }\r\n\r\n            const matches = regEx.exec(file);\r\n\r\n            const submissionFiles = glob.sync(file + sep + SUBMISSION_FOLDER + '/*');\r\n\r\n            const submissionPromisses: Promise<any>[] = submissionFiles.map((submission) => {\r\n              try {\r\n                accessSync(submission, constants.F_OK);\r\n                const studentFolder = dirname(dirname(submission));\r\n                return loadMarksAt(studentFolder).then((submissionInfo: MarkingSubmissionInfo) => {\r\n                  if (submissionInfo.marks.length > 0) {\r\n                    const ext = path.extname(submission);\r\n                    let fileName = path.basename(submission, ext);\r\n                    return annotatePdfFile(submission, submissionInfo).then(async (data) => {\r\n                      fileName += '_MARK';\r\n                      writeFileSync(studentFolder + sep + FEEDBACK_FOLDER + sep + fileName + '.pdf', data.pdfBytes);\r\n                      unlinkSync(submission);\r\n                      accessSync(assignmentFolder + sep + GRADES_FILE, constants.F_OK);\r\n                      let changed = false;\r\n                      let assignmentHeader;\r\n                      for (let i = 0; i < gradesJSON.length; i++) {\r\n                        if (i === 0) {\r\n                          const gradeKeys = Object.keys(gradesJSON[i]);\r\n                          if (gradeKeys.length > 0) {\r\n                            assignmentHeader = gradeKeys[0];\r\n                          }\r\n                        } else if (i > 1 && !isNullOrUndefined(assignmentHeader) && gradesJSON[i] && gradesJSON[i][assignmentHeader].toUpperCase() === matches[2].toUpperCase()) {\r\n                          gradesJSON[i].field5 = data.totalMark;\r\n                          changed = true;\r\n                        }\r\n                      }\r\n                      if (changed) {\r\n                        return json2csvAsync(gradesJSON, {emptyFieldValue: '', prependHeader: false})\r\n                          .then(csv => {\r\n                            return writeFile(assignmentFolder + sep + GRADES_FILE, csv);\r\n                          }, () => {\r\n                            return Promise.reject( 'Failed to save marks to ' + GRADES_FILE + ' file for student ' + matches[2] + '!');\r\n                          });\r\n                      } else {\r\n                        return Promise.reject('Failed to save mark');\r\n                      }\r\n                    }, (error) => {\r\n                      return Promise.reject('Error annotating marks to PDF ' + fileName + ' [' + error.message + ']');\r\n                    });\r\n                  }\r\n                });\r\n\r\n              } catch (e) {\r\n                return Promise.reject(e.message);\r\n              }\r\n            });\r\n\r\n            return Promise.all(submissionPromisses);\r\n          }\r\n        });\r\n        return Promise.all(promises).then(() => {\r\n          return zipDir((workspaceFolder === DEFAULT_WORKSPACE) ? config.defaultPath : config.defaultPath + sep + workspaceFolder,\r\n            {filter: (path: string, stat) => (!(/\\.marks\\.json|\\.settings\\.json|\\.zip$/.test(path)) && ((path.endsWith(assignmentFolder)) ? true : (path.startsWith((assignmentFolder) + sep))))})\r\n            .then((buffer) => {\r\n              return buffer;\r\n            }, (err) => {\r\n              console.error('Could not export assignment');\r\n              console.error(err);\r\n              return Promise.reject('Could not export assignment');\r\n            });\r\n        });\r\n      }).then((buffer) => {\r\n        return setDateFinalized(assignmentFolder)\r\n          .then(() => buffer);\r\n      });\r\n    });\r\n  } catch (e) {\r\n    return Promise.reject(e.message);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport function finalizeAssignmentRubric(event: IpcMainInvokeEvent, workspaceFolder: string, location: string, rubricName: string): Promise<any> {\r\n  try {\r\n    return Promise.all([\r\n      getConfig(),\r\n      getAssignmentDirectory(workspaceFolder, location)\r\n    ]).then(([config, assignmentFolder]) => {\r\n      return csvtojson({noheader: true, trim: false}).fromFile(assignmentFolder + sep + GRADES_FILE).then((gradesJSON) => {\r\n        const files = glob.sync(assignmentFolder + sep + '/*');\r\n        const assignmentSettingsBuffer = readFileSync(assignmentFolder + sep + SETTING_FILE);\r\n        if (!isJson(assignmentSettingsBuffer)) {\r\n          return Promise.reject('Invalid assignment settings file!');\r\n        }\r\n\r\n        const assignmentSettingsInfo: AssignmentSettingsInfo = JSON.parse(assignmentSettingsBuffer.toString());\r\n\r\n        const promises: Promise<any>[] = files.map((file) => {\r\n          if (statSync(file).isDirectory()) {\r\n            const regEx = /(.*)\\((.+)\\)$/;\r\n            if (!regEx.test(file)) {\r\n              return Promise.reject(INVALID_STUDENT_FOLDER + ' ' + basename(file));\r\n            }\r\n\r\n            const matches = regEx.exec(file);\r\n\r\n            const submissionFiles = glob.sync(file + sep + SUBMISSION_FOLDER + '/*');\r\n            rubricName = rubricName.trim();\r\n\r\n            if (isNullOrUndefined(assignmentSettingsInfo.rubric)) {\r\n              return Promise.reject('Assignment\\'s settings does not contain a rubric!');\r\n            } else if (assignmentSettingsInfo.rubric.name !== rubricName) {\r\n              return Promise.reject('Assignment\\'s settings rubric does not match provided!');\r\n            }\r\n\r\n            const submissionPromisses: Promise<any>[] = submissionFiles.map((submission) => {\r\n              try {\r\n                accessSync(submission, constants.F_OK);\r\n                const studentFolder = dirname(dirname(submission));\r\n                return loadMarksAt(studentFolder).then((submissionInfo: RubricSubmissionInfo) => {\r\n                  if (submissionInfo.marks.length > 0) {\r\n                    return annotatePdfRubric(submission, submissionInfo, assignmentSettingsInfo.rubric).then((data) => {\r\n                      const ext = path.extname(submission);\r\n                      const fileName = path.basename(submission, ext) + '_MARK';\r\n                      writeFileSync(studentFolder + sep + FEEDBACK_FOLDER + sep + fileName + '.pdf', data.pdfBytes);\r\n                      unlinkSync(submission);\r\n                      accessSync(assignmentFolder + sep + GRADES_FILE, constants.F_OK);\r\n                      let changed = false;\r\n                      let assignmentHeader;\r\n                      for (let i = 0; i < gradesJSON.length; i++) {\r\n                        if (i === 0) {\r\n                          const gradesKeys = Object.keys(gradesJSON[i]);\r\n                          if (gradesKeys.length > 0) {\r\n                            assignmentHeader = gradesKeys[0];\r\n                          }\r\n                        } else if (i > 1 && !isNullOrUndefined(assignmentHeader) && gradesJSON[i] && gradesJSON[i][assignmentHeader].toUpperCase() === matches[2].toUpperCase()) {\r\n                          gradesJSON[i].field5 = data.totalMark;\r\n                          changed = true;\r\n                          break;\r\n                        }\r\n                      }\r\n                      if (changed) {\r\n                        return json2csvAsync(gradesJSON, {emptyFieldValue: '', prependHeader: false})\r\n                          .then(csv => {\r\n                            return writeFile(assignmentFolder + sep + GRADES_FILE, csv);\r\n                          })\r\n                          .catch(() => {\r\n                            return Promise.reject('Failed to save marks to ' + GRADES_FILE + ' file for student ' + matches[2] + '!');\r\n                          });\r\n                      } else {\r\n                        return Promise.reject('Failed to save mark');\r\n                      }\r\n                    }, (error) => {\r\n                      return Promise.reject('Error annotating marks to PDF [' + error.message + ']');\r\n                    });\r\n                  }\r\n                });\r\n              } catch (e) {\r\n                return Promise.reject(e.message);\r\n              }\r\n            });\r\n\r\n            return Promise.all(submissionPromisses);\r\n          }\r\n        });\r\n        return Promise.all(promises).then(() => {\r\n          return zipDir((workspaceFolder === DEFAULT_WORKSPACE) ? config.defaultPath : config.defaultPath + sep + workspaceFolder,\r\n            {filter: (filterPath: string, stat) => (!(/\\.marks\\.json|.settings.json|\\.zip$/.test(filterPath)) && ((filterPath.endsWith(assignmentFolder)) ? true : (filterPath.startsWith(assignmentFolder + sep))))})\r\n            .then((buffer) => {\r\n              return buffer;\r\n            }, (err) => {\r\n              console.error('Could not export assignment');\r\n              console.error(err);\r\n              return Promise.reject('Could not export assignment');\r\n            });\r\n        });\r\n      }).then((buffer) => {\r\n        return setDateFinalized(assignmentFolder)\r\n          .then(() => buffer);\r\n      });\r\n    });\r\n\r\n  } catch (e) {\r\n    return Promise.reject( e.message);\r\n  }\r\n}\r\n\r\n\r\nfunction cleanupTemp(tmpDir: string) {\r\n  try {\r\n    if (tmpDir) {\r\n      rmSync(tmpDir, { recursive: true });\r\n    }\r\n  } catch (e) {\r\n    console.error(`An error has occurred while removing the temp folder at ${tmpDir}. Please remove it manually. Error: ${e}`);\r\n  }\r\n}\r\n\r\nexport function shareExport(event: IpcMainInvokeEvent, shareRequest: ShareAssignments): Promise<any> {\r\n\r\n  try {\r\n\r\n    return getAssignmentDirectory(shareRequest.workspaceFolder, shareRequest.assignmentName).then((originalAssignmentDirectory) => {\r\n\r\n      return csvtojson({\r\n        noheader: true,\r\n        trim: false\r\n      }).fromFile(originalAssignmentDirectory + sep + GRADES_FILE).then((gradesJSON) => {\r\n        let tmpDir;\r\n        // Create a temp directory to construct files to zip\r\n        tmpDir = mkdtempSync(path.join(os.tmpdir(), 'pdfm-'));\r\n\r\n        const tempAssignmentDirectory = tmpDir + sep + shareRequest.assignmentName;\r\n        mkdirSync(tempAssignmentDirectory);\r\n\r\n        // Now copy each submission\r\n        shareRequest.submissions.forEach((submission) => {\r\n          const submissionDirectoryName = submission.directoryName;\r\n          copySync(originalAssignmentDirectory + sep + submissionDirectoryName, tempAssignmentDirectory + sep + submissionDirectoryName);\r\n        });\r\n\r\n        const shareGradesJson = [\r\n          gradesJSON[0],\r\n          gradesJSON[1],\r\n          gradesJSON[2],\r\n        ];\r\n        for (let i = 3; i < gradesJSON.length; i++) {\r\n          const gradesStudentId = gradesJSON[i].field2;\r\n          const studentPredicate = (student) => student.studentNumber.toUpperCase() === gradesStudentId.toUpperCase();\r\n          const shouldExport = !isNil(find(shareRequest.submissions, studentPredicate));\r\n          if (shouldExport) {\r\n            shareGradesJson.push(gradesJSON[i]);\r\n          }\r\n        }\r\n\r\n        return json2csvAsync(shareGradesJson, {emptyFieldValue: '', prependHeader: false})\r\n          .then(csv => {\r\n            return writeFile(tempAssignmentDirectory + sep + GRADES_FILE, csv);\r\n          })\r\n          .then(() => {\r\n            return zipDir(tmpDir);\r\n          })\r\n          .then((buffer) => {\r\n            cleanupTemp(tmpDir);\r\n            return buffer;\r\n          }, (error) => {\r\n            cleanupTemp(tmpDir);\r\n            return Promise.reject(error.message);\r\n          });\r\n      });\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    return Promise.reject('Error trying to export share');\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport function updateAssignmentRubric(\r\n  event: IpcMainInvokeEvent,\r\n  workspaceName: string,\r\n  assignmentName: string,\r\n  rubricName: string): Promise<IRubric> {\r\n\r\n\r\n  return Promise.all([\r\n    findRubric(rubricName),\r\n    getAssignmentDirectory(workspaceName, assignmentName)\r\n  ]).then((results) => {\r\n\r\n    const rubric: IRubric = results[0];\r\n    const assignmentDirectory: string = results[1];\r\n\r\n    // Remove all marks files\r\n    const markFiles = glob.sync(assignmentDirectory + sep + '/**/' + MARK_FILE);\r\n    markFiles.forEach(markFile => {\r\n      unlinkSync(markFile);\r\n    });\r\n\r\n    return getAssignmentSettingsFor(workspaceName, assignmentName)\r\n      .then((originalSettings) => {\r\n        originalSettings.rubric = rubric;\r\n        return writeAssignmentSettingsFor(originalSettings, workspaceName, assignmentName);\r\n      }).then(() => {\r\n        return checkAccess(assignmentDirectory + sep + GRADES_FILE).then(() => {\r\n          return csvtojson({noheader: true, trim: false}).fromFile(assignmentDirectory + sep + GRADES_FILE)\r\n            .then((gradesJSON) => {\r\n              let changed = false;\r\n              let assignmentHeader;\r\n              for (let i = 0; i < gradesJSON.length; i++) {\r\n                if (i === 0) {\r\n                  const keys = Object.keys(gradesJSON[i]);\r\n                  if (keys.length > 0) {\r\n                    assignmentHeader = keys[0];\r\n                  }\r\n                } else if (i > 1) {\r\n                  gradesJSON[i].field5 = '';\r\n                  changed = true;\r\n                }\r\n              }\r\n\r\n              if (changed) {\r\n                return json2csvAsync(gradesJSON, {emptyFieldValue: '', prependHeader: false}).then( ( csv) => {\r\n                  return writeToFile(assignmentDirectory + sep + GRADES_FILE, csv, 'Successfully saved marks!', 'Failed to save marks to ' + GRADES_FILE + ' file!').then(() => {\r\n                    return rubric;\r\n                  });\r\n                }, (err) => {\r\n                  return Promise.reject('Failed to convert json to csv!');\r\n                });\r\n              } else {\r\n                return Promise.reject('Failed to save mark');\r\n              }\r\n            }, reason => {\r\n              return Promise.reject( reason);\r\n            });\r\n        });\r\n      });\r\n\r\n  });\r\n}\r\n\r\n\r\nexport function getPdfFile(event: IpcMainInvokeEvent, location: string): Promise<Uint8Array> {\r\n  return workspaceRelativePathToAbsolute(location).then((actualPath) => {\r\n    return checkAccess(actualPath).then(() => {\r\n      return readFile(actualPath);\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Convert a workspace relative tree path, to an absolute filesystem path\r\n * @param relativePath Workspace relative file path\r\n */\r\nexport function workspaceRelativePathToAbsolute(relativePath: string): Promise<string> {\r\n  return getConfig().then((config) => {\r\n    if (relativePath.startsWith(DEFAULT_WORKSPACE + '/')) {\r\n      relativePath = relativePath.replace(DEFAULT_WORKSPACE + '/', '');\r\n    }\r\n    relativePath = relativePath.replace(/\\//g, sep);\r\n    return config.defaultPath + sep + relativePath;\r\n  });\r\n}\r\n","import {readFile, writeFile} from 'fs/promises';\r\nimport {IComment} from '@shared/info-objects/comment.class';\r\nimport {ensureConfigDirectory} from './config.handler';\r\nimport {COMMENTS_FILE, COULD_NOT_READ_COMMENT_LIST} from '../constants';\r\nimport {existsSync} from 'fs';\r\nimport {isJson} from '../utils';\r\nimport {IpcMainInvokeEvent} from 'electron';\r\nimport {randomUUID} from 'crypto';\r\n\r\nfunction ensureCommentsFile(): Promise<string> {\r\n  return ensureConfigDirectory()\r\n    .then((configDirectory) => {\r\n      if (existsSync(configDirectory + COMMENTS_FILE)) {\r\n        return configDirectory + COMMENTS_FILE;\r\n      } else {\r\n        return writeFile(configDirectory + COMMENTS_FILE, '[]')\r\n          .then(() => configDirectory + COMMENTS_FILE);\r\n      }\r\n    });\r\n}\r\n\r\nexport function updateCommentsFile(comments: IComment[]): Promise<IComment[]> {\r\n  return ensureCommentsFile().then((commentsFilePath) => {\r\n    return writeFile(commentsFilePath, JSON.stringify(comments));\r\n  })\r\n    .then(() => comments, () => Promise.reject(COULD_NOT_READ_COMMENT_LIST));\r\n}\r\n\r\nexport function getComments(): Promise<IComment[]> {\r\n  return ensureCommentsFile().then((commentsFilePath) => {\r\n      return readFile(commentsFilePath).then((data) => {\r\n        if (!isJson(data)) {\r\n          return Promise.reject(COULD_NOT_READ_COMMENT_LIST);\r\n        }\r\n        return getCommentsDetails(JSON.parse(data.toString()));\r\n      });\r\n  });\r\n}\r\n\r\n\r\nexport function deleteComment(event: IpcMainInvokeEvent, commentId: string): Promise<IComment[]> {\r\n  return getComments().then((comments) => {\r\n    let indexFound = -1;\r\n    for (let i = 0; i < comments.length; i++) {\r\n      if (comments[i].id === commentId) {\r\n        indexFound = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (indexFound === -1) {\r\n      return Promise.reject('Could not find comment');\r\n    }\r\n    comments.splice(indexFound, 1);\r\n    const newComments = getCommentsDetails(comments);\r\n    return updateCommentsFile(newComments);\r\n  });\r\n}\r\n\r\n\r\nexport function addComment(event: IpcMainInvokeEvent, commentText: string): Promise<IComment[]> {\r\n  return getComments().then(comments => {\r\n    comments.push({\r\n      id: randomUUID(),\r\n      inUse: false,\r\n      title: commentText\r\n    });\r\n\r\n    return updateCommentsFile(comments);\r\n  });\r\n}\r\n\r\nfunction getCommentsDetails(comments: IComment[]) {\r\n  const commentNames: IComment[] = [];\r\n  if (Array.isArray(comments)) {\r\n    comments.forEach(comment => {\r\n      const commentName = {\r\n        id: '' + comment.id,\r\n        title: comment.title,\r\n        inUse: comment.inUse\r\n      };\r\n      commentNames.push(commentName);\r\n    });\r\n    return commentNames;\r\n  }\r\n  return commentNames;\r\n}\r\n","import {mkdir, readFile, writeFile} from 'fs/promises';\r\nimport {COMMENTS_FILE, CONFIG_DIR, CONFIG_FILE} from '../constants';\r\nimport {isJson} from '../utils';\r\nimport {existsSync} from 'fs';\r\nimport {SettingInfo} from '@shared/info-objects/setting.info';\r\nimport {IpcMainInvokeEvent} from 'electron';\r\n\r\nexport function ensureConfigDirectory(): Promise<string> {\r\n  if (!existsSync(CONFIG_DIR)) {\r\n    return mkdir(CONFIG_DIR)\r\n      .then(() => ensureConfigFile())\r\n      .then(() => CONFIG_DIR);\r\n  } else {\r\n    return ensureConfigFile().then(() => CONFIG_DIR);\r\n  }\r\n}\r\n\r\nfunction ensureConfigFile(): Promise<string> {\r\n  if (existsSync(CONFIG_DIR + CONFIG_FILE)) {\r\n    return Promise.resolve(CONFIG_DIR + CONFIG_FILE);\r\n  } else {\r\n    return writeFile(CONFIG_DIR + CONFIG_FILE, '{}')\r\n      .then(() => CONFIG_DIR + CONFIG_FILE);\r\n  }\r\n}\r\n\r\nexport function getConfig(): Promise<SettingInfo> {\r\n  return ensureConfigDirectory().then(() => {\r\n    return readFile(CONFIG_DIR + CONFIG_FILE).then((data) => {\r\n      if (!isJson(data)) {\r\n        return Promise.reject(`Corrupt configuration files at \"${CONFIG_DIR}${CONFIG_FILE}\"`);\r\n      }\r\n\r\n      return JSON.parse(data.toString());\r\n    });\r\n  });\r\n}\r\n\r\nexport function updateConfig(event: IpcMainInvokeEvent, config: SettingInfo): Promise<SettingInfo> {\r\n  return updateConfigFile(config);\r\n}\r\n\r\nexport function updateConfigFile(config: SettingInfo): Promise<SettingInfo> {\r\n  return ensureConfigDirectory().then(() => {\r\n    return writeFile(CONFIG_DIR + CONFIG_FILE, JSON.stringify(config))\r\n      .then(() => config);\r\n  });\r\n}\r\n","import {existsSync} from 'fs';\r\nimport * as glob from 'glob';\r\nimport {basename, sep} from 'path';\r\nimport {AssignmentSettingsInfo} from '@shared/info-objects/assignment-settings.info';\r\nimport {IpcMainInvokeEvent} from 'electron';\r\nimport {ImportInfo} from '@shared/info-objects/import.info';\r\nimport {isNil} from 'lodash';\r\nimport {readFile} from 'fs/promises';\r\nimport {getRubrics, writeRubricFile} from './rubric.handler';\r\nimport {EXTRACTED_ZIP, EXTRACTED_ZIP_BUT_FAILED_TO_WRITE_TO_RUBRIC, NOT_PROVIDED_RUBRIC} from '../constants';\r\nimport {IRubric} from '@shared/info-objects/rubric.class';\r\nimport {deleteFolderRecursive, extractAssignmentZipFile, isFolder} from '../utils';\r\n\r\nimport JSZip from 'jszip';\r\nimport {getWorkingDirectory, writeAssignmentSettings} from './workspace.handler';\r\nimport {SakaiConstants} from '@shared/constants/sakai.constants';\r\nimport {findTreeNode, TreeNode, TreeNodeType} from '@shared/info-objects/workspace';\r\n\r\n\r\nfunction existingFolders(workspace: string): Promise<string[]> {\r\n  return getWorkingDirectory(workspace).then((workingDirectory) => {\r\n    const fileListing = glob.sync(workingDirectory + '/*');\r\n\r\n    const folders = [];\r\n    fileListing.forEach(folder => {\r\n      if (isFolder(folder)) {\r\n        folders.push(basename(folder));\r\n      }\r\n    });\r\n    return folders;\r\n  });\r\n}\r\n\r\nexport function importZip(event: IpcMainInvokeEvent,  req: ImportInfo): Promise<any> {\r\n\r\n  if (isNil(req.file)) {\r\n    return Promise.reject('No file selected!');\r\n  }\r\n  let rubricName;\r\n  if (!req.noRubric) {\r\n    if (isNil(req.rubricName)) {\r\n      return Promise.reject(NOT_PROVIDED_RUBRIC);\r\n    } else {\r\n      rubricName = req.rubricName.trim();\r\n    }\r\n  }\r\n\r\n\r\n  return Promise.all([\r\n    existingFolders(req.workspace),\r\n    readFile(req.file),\r\n    getRubrics()\r\n  ]).then((results) => {\r\n    const folders = results[0];\r\n    const zipFile: Buffer = results[1];\r\n    const rubrics: IRubric[] = results[2];\r\n    const rubricIndex = rubrics.findIndex(r => r.name === rubricName);\r\n\r\n\r\n\r\n    return new JSZip().loadAsync(zipFile)\r\n      .then(async (zipObject) => {\r\n        let entry = '';\r\n        zipObject.forEach((relativePath, zipEntry) => {\r\n          if (entry === '') {\r\n            entry = zipEntry.name;\r\n          }\r\n        });\r\n        const entryPath = entry.split('/');\r\n        if (entryPath.length > 0) {\r\n          const oldPath = entryPath[0];\r\n          let foundCount = 0;\r\n          for (let i = 0; i < folders.length; i++) {\r\n            if (oldPath.toLowerCase() === folders[i].toLowerCase()) {\r\n              foundCount++;\r\n            } else if ((oldPath.toLowerCase() + ' (' + (foundCount + 1) + ')') === folders[i].toLowerCase()) {\r\n              foundCount++;\r\n            }\r\n          }\r\n          let newFolder = '';\r\n\r\n          // Default settings for the new assignment\r\n          const settings: AssignmentSettingsInfo = {defaultColour: '#3b487d', rubric: rubrics[rubricIndex], isCreated: false};\r\n\r\n          // By default the zip wil contain the name of the assignment directory\r\n          let assignmentDirectoryName = oldPath;\r\n          let renameOld = '';\r\n          if (foundCount !== 0) {\r\n            // If existing assignment directory exists, setup renames to extract the file\r\n            assignmentDirectoryName = oldPath + ' (' + (foundCount + 1) + ')';\r\n            newFolder = oldPath + ' (' + (foundCount + 1) + ')' + '/';\r\n            renameOld = oldPath + '/';\r\n          }\r\n\r\n          return getWorkingDirectory(req.workspace).then((workingDirectory) => {\r\n            return extractAssignmentZipFile(req.file, workingDirectory + sep, newFolder, renameOld, req.assignmentName, req.assignmentType).then(() => {\r\n              return writeAssignmentSettings(req.workspace, assignmentDirectoryName, settings).then(() => {\r\n                if (!isNil(rubricName)) {\r\n                  rubrics[rubricIndex].inUse = true;\r\n                  return writeRubricFile(rubrics).then(() => {\r\n                    return EXTRACTED_ZIP;\r\n                  }, () => {\r\n                    return Promise.reject(EXTRACTED_ZIP_BUT_FAILED_TO_WRITE_TO_RUBRIC);\r\n                  });\r\n                }\r\n                return EXTRACTED_ZIP;\r\n              });\r\n            }).catch((error) => {\r\n              if (existsSync(workingDirectory + sep + newFolder)) {\r\n                deleteFolderRecursive(workingDirectory + sep + newFolder);\r\n              }\r\n              return Promise.reject(error.message);\r\n            });\r\n          });\r\n        } else {\r\n          return Promise.reject('Zip Object contains no entries!');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        return Promise.reject(error.message);\r\n      });\r\n\r\n  });\r\n}\r\n\r\n\r\n\r\nexport function getZipEntries(event: IpcMainInvokeEvent, file: string): Promise<TreeNode[]> {\r\n  return readFile(file).then((data) => {\r\n    return new JSZip().loadAsync(data)\r\n      .then((zip) => {\r\n        const treeNodes: TreeNode[] = [];\r\n        zip.forEach((relativePath, zipEntry) => {\r\n          if (!zipEntry.dir) {\r\n\r\n            let nodes = treeNodes;\r\n            const splits = zipEntry.name.split('/');\r\n            splits.forEach((item, index) => {\r\n              let node = findTreeNode(item, nodes);\r\n              if (isNil(node)) {\r\n                node = {\r\n                  name: item,\r\n                  type: (index + 1) < splits.length ? TreeNodeType.ASSIGNMENT : TreeNodeType.FILE,\r\n                  children: [],\r\n                  dateModified: zipEntry.date,\r\n                  parent: null // Do we need parent nodes for zips?\r\n                };\r\n                nodes.push(node);\r\n              }\r\n              nodes = node.children;\r\n            });\r\n          }\r\n        });\r\n        return treeNodes;\r\n      });\r\n  })\r\n    .catch((e) => Promise.reject(e));\r\n}\r\n\r\n\r\nexport function validateZipFile(event: IpcMainInvokeEvent, file: string, format: string): Promise<any> {\r\n  if (format === 'Assignment') {\r\n    return validateZipAssignmentFile(file);\r\n  } else {\r\n    return validateGenericZip(file);\r\n  }\r\n}\r\n\r\nfunction readZipFile(file: string): Promise<JSZip> {\r\n  return readFile(file)\r\n    .then(data => new JSZip().loadAsync(data))\r\n    .catch(() => Promise.reject('Error trying to decipher zip file format validity!'));\r\n}\r\n\r\nfunction validateZipAssignmentFile(file: string): Promise<any> {\r\n  return readZipFile(file).then((zip) => {\r\n    const filePaths = Object.keys(zip.files);\r\n    const fileNames = SakaiConstants.assignmentRootFiles;\r\n    for (const filePath of filePaths) {\r\n      const path = filePath.split('/');\r\n      if (path[1] !== undefined && fileNames.indexOf(path[1]) !== -1) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // Could not find at least on sakai file\r\n   return Promise.reject(SakaiConstants.formatErrorMessage);\r\n  });\r\n}\r\n\r\nfunction validateGenericZip(file: string): Promise<any> {\r\n  return readZipFile(file).then((zip) => {\r\n    const filePaths = Object.keys(zip.files).sort();\r\n    const sakaiFileNames = SakaiConstants.assignmentRootFiles;\r\n    for (const filePath of filePaths) {\r\n      const path = filePath.split('/');\r\n\r\n      // Check if it is a sakai file\r\n      if (path[1] !== undefined && sakaiFileNames.indexOf(path[1]) !== -1) {\r\n        return Promise.reject('Invalid zip format. Please select a file in the generic import format');\r\n      }\r\n\r\n      if (path.length > 2) {\r\n        // Too many nested directories\r\n        return Promise.reject('Invalid zip format. Please select a file in the generic import format');\r\n      }\r\n\r\n      // Check if the file is a directory\r\n    }\r\n  });\r\n}\r\n","import {BrowserWindow, dialog, IpcMainInvokeEvent} from 'electron';\r\nimport {isBlank, isJson, joinError} from '../utils';\r\nimport {IRubric, IRubricName, SelectedRubric} from '@shared/info-objects/rubric.class';\r\nimport {existsSync, readFileSync} from 'fs';\r\nimport {mkdir, readFile, writeFile} from 'fs/promises';\r\nimport {isNil, noop} from 'lodash';\r\nimport {basename, extname, sep} from 'path';\r\nimport {\r\n  CONFIG_DIR,\r\n  COULD_NOT_CREATE_CONFIG_DIRECTORY,\r\n  COULD_NOT_CREATE_RUBRIC_FILE,\r\n  COULD_NOT_READ_RUBRIC_LIST,\r\n  INVALID_RUBRIC_JSON_FILE,\r\n  NOT_CONFIGURED_CONFIG_DIRECTORY,\r\n  RUBRICS_FILE,\r\n} from '../constants';\r\nimport * as glob from 'glob';\r\nimport {AssignmentSettingsInfo} from '@shared/info-objects/assignment-settings.info';\r\nimport {getConfig} from './config.handler';\r\nimport {SETTING_FILE} from '@shared/constants/constants';\r\n\r\nconst excelParser = new (require('simple-excel-to-json').XlsParser)();\r\n\r\nexport function selectRubricFile(): Promise<SelectedRubric> {\r\n  return dialog.showOpenDialog(BrowserWindow.getFocusedWindow(), {\r\n    title: 'Select File',\r\n    filters: [\r\n      { name: 'Custom Files', extensions: ['xlsx', 'xls'] }\r\n    ],\r\n    properties: ['openFile']\r\n  }).then((data) => {\r\n    if (data.canceled) {\r\n      return Promise.reject();\r\n    } else {\r\n      try {\r\n        const doc = excelParser.parseXls2Json(data.filePaths[0], { isNested: true });\r\n        const docInJSON = doc[0] || [];\r\n\r\n        if (docInJSON.length === 0) {\r\n          return Promise.reject(`No criteria(s) provided`);\r\n        } else {\r\n          let rowCount = 4;\r\n          const levelCount = 6;\r\n          let errorMessage: string;\r\n          let errorFound: boolean;\r\n          let validLevelLength = 0;\r\n          const startMessagePrefix = `Error[row = `;\r\n          const startMessageSuffix = `]: `;\r\n          const notProvided = `is not provided`;\r\n          const ext = extname(data.filePaths[0]);\r\n          const fileName = basename(data.filePaths[0], ext);\r\n\r\n          const rubric: IRubric = {\r\n            criterias: [],\r\n            name: fileName\r\n          };\r\n\r\n          for (let index = 0; index < docInJSON.length; index++) {\r\n            if (index > 1) {\r\n              const criteriaData = docInJSON[index];\r\n\r\n              errorMessage = '';\r\n              errorFound = false;\r\n\r\n              if (isBlank(criteriaData.Criterion_name)) {\r\n                errorMessage = joinError(errorMessage, `Criteria name ${notProvided}`);\r\n                errorFound = true;\r\n              }\r\n\r\n              if (isBlank(criteriaData.Criterion_description)) {\r\n                errorMessage = joinError(errorMessage, `Criteria description ${notProvided}`);\r\n                errorFound = true;\r\n              }\r\n\r\n              if (errorFound && index === 2) {\r\n                return Promise.reject(errorMessage);\r\n              } else if (errorFound) {\r\n                return { selectedPath: data.filePaths[0], rubric: rubric};\r\n              }\r\n\r\n              const levels = [];\r\n\r\n              for (let i = 1; ((validLevelLength === 0) ? levelCount : validLevelLength); i++) {\r\n                const achievementMark = 'Achievement_level_'  + i + '_mark';\r\n                const achievementFeedback = 'Achievement_level_'  + i + '_feedback';\r\n                const achievementTitle = 'Achievement_level_'  + i + '_title';\r\n\r\n                if (isBlank(criteriaData[achievementMark])) {\r\n                  errorMessage = joinError(errorMessage, `${startMessagePrefix}${rowCount}${startMessageSuffix}${achievementMark} ${notProvided}`);\r\n                  errorFound = true;\r\n                }\r\n\r\n                if (isNaN(criteriaData[achievementMark])) {\r\n                  errorMessage = joinError(errorMessage, `${startMessagePrefix}${rowCount}${startMessageSuffix}${achievementMark} is not a valid number`);\r\n                  errorFound = true;\r\n                }\r\n\r\n                criteriaData[achievementMark] = parseInt('' + criteriaData[achievementMark], 10);\r\n\r\n                if (isBlank(criteriaData[achievementTitle])) {\r\n                  errorMessage = joinError(errorMessage, `${startMessagePrefix}${rowCount}${startMessageSuffix}${achievementTitle} ${notProvided}`);\r\n                  errorFound = true;\r\n                }\r\n\r\n                if (isBlank(criteriaData[achievementFeedback])) {\r\n                  errorMessage = joinError(errorMessage, `${startMessagePrefix}${rowCount}${startMessageSuffix}${achievementFeedback} ${notProvided}`);\r\n                  errorFound = true;\r\n                }\r\n\r\n                if (errorFound && i === 1) {\r\n                  return Promise.reject(errorMessage);\r\n                } else if (errorFound && i > 1) {\r\n                  if (index === 2) {\r\n                    validLevelLength = i - 1;\r\n                  }\r\n                  break;\r\n                } else if ((index === 2) && (i === levelCount)) {\r\n                  validLevelLength = levelCount;\r\n                }\r\n\r\n                levels[i - 1] = {\r\n                  score: criteriaData[achievementMark],\r\n                  description: criteriaData[achievementFeedback].trim(),\r\n                  label: criteriaData[achievementTitle].trim()\r\n                };\r\n              }\r\n\r\n              if (index !== 2 && levels.length !== validLevelLength) {\r\n                errorMessage = joinError(errorMessage, `${startMessagePrefix}${rowCount}${startMessageSuffix} The provided number of achievement levels do not match first row achievement levels`);\r\n                return Promise.reject( errorMessage);\r\n              }\r\n\r\n              rubric.criterias.push({\r\n                description: criteriaData.Criterion_description,\r\n                name: criteriaData.Criterion_name,\r\n                levels\r\n              });\r\n\r\n              rowCount++;\r\n            }\r\n          }\r\n\r\n          if (rubric.criterias.length === 0) {\r\n            return Promise.reject( `No criteria(s) provided`);\r\n          } else {\r\n            return { selectedPath: data.filePaths[0], rubric: rubric};\r\n          }\r\n        }\r\n      } catch (reason) {\r\n        return Promise.reject(reason);\r\n      }\r\n    }\r\n  }, reason => {\r\n    return Promise.reject(reason);\r\n  });\r\n}\r\n\r\nexport function getRubrics(): Promise<IRubric[]> {\r\n  if (existsSync(CONFIG_DIR + RUBRICS_FILE)) {\r\n    return readFile(CONFIG_DIR + RUBRICS_FILE).then((data) => {\r\n      if (!isJson(data)) {\r\n        return Promise.reject(INVALID_RUBRIC_JSON_FILE);\r\n      }\r\n\r\n      const rubrics: IRubric[] = JSON.parse(data.toString());\r\n      if (!Array.isArray(rubrics)) {\r\n        Promise.reject(COULD_NOT_READ_RUBRIC_LIST);\r\n      }\r\n\r\n      return rubrics;\r\n    }, (error) => {\r\n      return Promise.reject('Failed to read file containing list of rubrics!');\r\n    });\r\n  } else {\r\n    return Promise.resolve([]);\r\n  }\r\n}\r\n\r\n\r\nexport function rubricUpload(event: IpcMainInvokeEvent, rubric: IRubric): Promise<IRubricName[]> {\r\n\r\n  return getRubrics().then((rubrics) => {\r\n    let foundCount = 0;\r\n\r\n    const clonedRubrics = [...rubrics];\r\n    clonedRubrics.sort((a, b) => (a.name > b.name) ? 1 : -1);\r\n\r\n    for (let i = 0; i < clonedRubrics.length; i++) {\r\n      if (clonedRubrics[i].name.toLowerCase() === rubric.name.toLowerCase()) {\r\n        foundCount++;\r\n      } else if (clonedRubrics[i].name.toLowerCase() === (rubric.name.toLowerCase() + ' (' + (foundCount + 1) + ')')) {\r\n        foundCount++;\r\n      }\r\n    }\r\n\r\n    if (foundCount !== 0) {\r\n      rubric.name = rubric.name + ' (' + (foundCount + 1) + ')';\r\n    }\r\n\r\n    rubrics.unshift(rubric);\r\n    return writeRubricFile(rubrics)\r\n      .then(r => toRubricNames(r));\r\n  });\r\n}\r\n\r\nexport function writeRubricFile(rubricData: IRubric[]): Promise<IRubric[]> {\r\n  let promise: Promise<any> = Promise.resolve();\r\n  if (!existsSync(CONFIG_DIR)) {\r\n    promise = mkdir(CONFIG_DIR).then(noop, err => {\r\n      return Promise.reject(COULD_NOT_CREATE_CONFIG_DIRECTORY);\r\n    });\r\n  }\r\n  return promise.then(() => {\r\n    return writeFile(CONFIG_DIR + RUBRICS_FILE, JSON.stringify(rubricData));\r\n  }).then(() => rubricData, (err) => {\r\n      return Promise.reject(COULD_NOT_CREATE_RUBRIC_FILE);\r\n    });\r\n}\r\n\r\nfunction toRubricNames(rubrics: IRubric[]): Promise<IRubricName[]> {\r\n  const rubricNames: IRubricName[] = [];\r\n  if (Array.isArray(rubrics)) {\r\n    rubrics.forEach(rubric => {\r\n      const rubricName = {name: rubric.name, inUse: (rubric.inUse) ? rubric.inUse : false};\r\n      rubricNames.push(rubricName);\r\n    });\r\n    return Promise.resolve(rubricNames);\r\n  }\r\n  return writeRubricFile([]);\r\n}\r\n\r\n\r\n\r\nexport function getRubricNames(): Promise<IRubricName[]> {\r\n  return getRubrics().then((rubrics) => toRubricNames(rubrics));\r\n}\r\n\r\n\r\nexport function deleteRubricCheck(event: IpcMainInvokeEvent, rubricName: string): Promise<boolean> {\r\n  rubricName = rubricName.trim();\r\n\r\n  return getConfig().then((config) => {\r\n    try {\r\n      const folders: string[] = glob.sync(config.defaultPath + sep + '*');\r\n      let found = false;\r\n      folders.forEach(folder => {\r\n        const settingFileContents = existsSync(folder + sep + SETTING_FILE) ? readFileSync(folder + sep + SETTING_FILE) : null;\r\n        if (settingFileContents != null) {\r\n          if (!isJson(settingFileContents)) {\r\n            return Promise.reject(NOT_CONFIGURED_CONFIG_DIRECTORY);\r\n          }\r\n          const settings: AssignmentSettingsInfo = JSON.parse(settingFileContents.toString());\r\n\r\n          if (settings.rubric && settings.rubric.name.toLowerCase() === rubricName.toLowerCase()) {\r\n            found = true;\r\n          }\r\n        }\r\n      });\r\n\r\n      return found;\r\n    } catch (e) {\r\n      return Promise.reject(e.message);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\nexport function deleteRubric(event: IpcMainInvokeEvent, rubricName: string): Promise<IRubricName[]> {\r\n  rubricName = rubricName.trim();\r\n  return getRubrics().then((rubrics) => {\r\n    let indexFound = -1;\r\n\r\n    for (let i = 0; i < rubrics.length; i++) {\r\n      if (rubrics[i].name.toLowerCase() === rubricName.toLowerCase()) {\r\n        indexFound = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (indexFound === -1) {\r\n      return Promise.reject('Could not find rubric');\r\n    } else {\r\n      rubrics.splice(indexFound, 1);\r\n    }\r\n\r\n    return writeRubricFile(rubrics);\r\n  });\r\n}\r\n\r\n\r\nexport function findRubric(rubricName: string): Promise<IRubric> {\r\n  return getRubrics().then((rubrics) => {\r\n    const rubric = rubrics.find(r => r.name.toLowerCase() === rubricName.toLowerCase());\r\n\r\n    if (isNil(rubric)) {\r\n      return Promise.reject('Could not find rubric');\r\n    }\r\n\r\n    return rubric;\r\n  });\r\n}\r\n\r\nexport function getRubric(event: IpcMainInvokeEvent, rubricName: string): Promise<IRubric> {\r\n  return findRubric(rubricName);\r\n}\r\n","import {UpdateCheckResult, UpdateInfo} from '@shared/info-objects/update-info';\r\nimport {autoUpdater, UpdateCheckResult as ElectronUpdateCheckResult} from 'electron-updater';\r\nimport {isNil} from 'lodash';\r\n\r\nlet latestUpdate: ElectronUpdateCheckResult = null;\r\n\r\nexport function checkForUpdates(): Promise<UpdateCheckResult | null> {\r\n  if (!autoUpdater.isUpdaterActive()) {\r\n    return Promise.resolve(null);\r\n  }\r\n  return autoUpdater.checkForUpdates().then((update) => {\r\n    latestUpdate = update;\r\n    const canSkip = autoUpdater.allowPrerelease;\r\n    return {\r\n      ...update,\r\n      canSkip // Only if pre-releases are enabled can it be skipped\r\n    };\r\n  });\r\n}\r\n\r\nexport function downloadUpdate(): Promise<UpdateInfo> {\r\n  if (isNil(latestUpdate)) {\r\n    return Promise.reject('No update available');\r\n  }\r\n  return autoUpdater.downloadUpdate(latestUpdate.cancellationToken).then(() => {\r\n    return latestUpdate.updateInfo;\r\n  });\r\n}\r\n","import {forEach, isNil} from 'lodash';\r\nimport {getConfig, updateConfigFile} from './config.handler';\r\nimport {basename, sep} from 'path';\r\nimport {writeFile} from 'fs/promises';\r\nimport {CONFIG_DIR, CONFIG_FILE} from '../constants';\r\nimport {existsSync, mkdirSync, readdirSync, renameSync, writeFileSync} from 'fs';\r\nimport {IpcMainInvokeEvent, shell} from 'electron';\r\nimport {moveSync} from 'fs-extra';\r\nimport {AssignmentSettingsInfo} from '@shared/info-objects/assignment-settings.info';\r\nimport {DEFAULT_WORKSPACE, SETTING_FILE} from '@shared/constants/constants';\r\n\r\nexport function getWorkingDirectory(workspaceName: string): Promise<string> {\r\n  return getConfig().then((config) => {\r\n    if (workspaceName === DEFAULT_WORKSPACE || isNil(workspaceName)) {\r\n      return config.defaultPath;\r\n    } else {\r\n      return config.defaultPath + sep + workspaceName;\r\n    }\r\n  });\r\n}\r\n\r\nexport function getAssignmentDirectory(workspaceName: string, assignmentName: string): Promise<string> {\r\n  return getWorkingDirectory(workspaceName).then((workingDirectory) => {\r\n    return workingDirectory + sep + assignmentName;\r\n  });\r\n}\r\n\r\nexport function writeAssignmentSettings(\r\n  workspaceName: string,\r\n  assignmentName: string,\r\n  settings: AssignmentSettingsInfo): Promise<AssignmentSettingsInfo> {\r\n  return getAssignmentDirectory(workspaceName, assignmentName).then((workingDirectory) => {\r\n    return writeFile(workingDirectory + sep + SETTING_FILE, JSON.stringify(settings));\r\n  }).then(() => settings);\r\n}\r\n\r\n\r\n\r\nexport function createWorkingFolder(event: IpcMainInvokeEvent, workFolderName: string): Promise<string> {\r\n  return getConfig().then((config) => {\r\n    const fullPath = config.defaultPath + sep + workFolderName;\r\n    if (!existsSync(fullPath)) {\r\n      mkdirSync(fullPath);\r\n    } else {\r\n      return Promise.reject('Folder with name \\'' + workFolderName + '\\' already exists.');\r\n    }\r\n\r\n    if (isNil(config.folders)) {\r\n      config.folders = [];\r\n    }\r\n    config.folders.push(fullPath);\r\n    return updateConfigFile(config).then(() => fullPath);\r\n  });\r\n}\r\n\r\n\r\n\r\nexport function updateWorkspaceName(event: IpcMainInvokeEvent, workspaceName: string, newWorkspaceName: string): Promise<string> {\r\n  return getConfig().then((config) => {\r\n    const folders = config.folders;\r\n    const currPath = config.defaultPath + sep + workspaceName;\r\n    const newPath = config.defaultPath + sep + newWorkspaceName;\r\n    if (existsSync(newPath)) {\r\n      return Promise.reject('Folder name already exists.');\r\n    }\r\n    try {\r\n      renameSync(currPath, newPath);\r\n      const foundIndex = folders.findIndex(x => x === currPath);\r\n      folders[foundIndex] = newPath;\r\n      config.folders = folders;\r\n      writeFileSync(CONFIG_DIR + CONFIG_FILE, JSON.stringify(config));\r\n      return newPath;\r\n    } catch (e) {\r\n      return Promise.reject(e.message);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nexport function moveWorkspaceAssignments(\r\n  event: IpcMainInvokeEvent,\r\n  currentWorkspaceName: string,\r\n  workspaceName: string,\r\n  assignments: any[] = []): Promise<any> {\r\n  return getConfig().then((config) => {\r\n    const currentDirectory = currentWorkspaceName.replace(/\\//g, sep);\r\n    const newDirectory = workspaceName.replace(/\\//g, sep);\r\n    const currentIsDefault = currentWorkspaceName === DEFAULT_WORKSPACE;\r\n    const newIsDefault = workspaceName === DEFAULT_WORKSPACE;\r\n\r\n    const workspacePath = currentIsDefault ? config.defaultPath :  config.defaultPath + sep + currentDirectory;\r\n    const newWorkspacePath = newIsDefault ? config.defaultPath : config.defaultPath + sep + newDirectory;\r\n    let error = null;\r\n    forEach(assignments, (assignment) => {\r\n      const assignmentPath = workspacePath + sep + assignment.assignmentTitle;\r\n      const newAssignmentPath = newWorkspacePath + sep + assignment.assignmentTitle;\r\n      if (!existsSync(newAssignmentPath)) {\r\n        try {\r\n          moveSync(assignmentPath, newAssignmentPath);\r\n        } catch (e) {\r\n          error = e.message;\r\n          return false; // Stop looping\r\n        }\r\n      } else {\r\n        error = 'Assignment with the same name already exists.';\r\n        return false; // Stop looping\r\n      }\r\n    });\r\n    if (!error) {\r\n      return 'Successfully renamed the directory.';\r\n    } else {\r\n      return Promise.reject(error);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nexport function getWorkspaces(): Promise<any> {\r\n  return getConfig().then((config) => {\r\n    return [DEFAULT_WORKSPACE].concat(config.folders || []);\r\n  });\r\n}\r\n\r\n\r\n\r\nexport function deleteWorkspace(event: IpcMainInvokeEvent, deleteFolder: string): Promise<string[]> {\r\n  return getConfig().then((config) => {\r\n    const folders = config.folders;\r\n    const workspaceNames = folders.map(item => {\r\n      return basename(item);\r\n    });\r\n    if (Array.isArray(workspaceNames)) {\r\n      let indexFound = -1;\r\n      for (let i = 0; i < workspaceNames.length; i++) {\r\n        if (workspaceNames[i].toUpperCase() === deleteFolder.toUpperCase()) {\r\n          indexFound = i;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (indexFound === -1) {\r\n        return Promise.reject('Could not find folder ' + deleteFolder);\r\n      }\r\n\r\n      let promise = Promise.resolve();\r\n      if (existsSync(folders[indexFound])) {\r\n        try {\r\n          promise = shell.trashItem(folders[indexFound]);\r\n        } catch (e) {\r\n          return Promise.reject(e);\r\n        }\r\n      }\r\n      return promise.then(() => {\r\n        folders.splice(indexFound, 1);\r\n        config.folders = folders;\r\n      })\r\n        .then(() => updateConfigFile(config))\r\n        .then(() => folders);\r\n    }\r\n    return Promise.resolve([]);\r\n  });\r\n}\r\n\r\n\r\nexport function deleteWorkspaceCheck(event: IpcMainInvokeEvent, deleteFolder: string): Promise<boolean> {\r\n  let found = false;\r\n  let hasAssignments = false;\r\n\r\n  return getConfig().then((config) => {\r\n    const workspaces: string[] = config.folders;\r\n    const workspaceNames = workspaces.map(item => {\r\n      return basename(item);\r\n    });\r\n    const currPath = config.defaultPath + sep + deleteFolder;\r\n    try {\r\n      for (let i = 0; i < workspaceNames.length; i++) {\r\n        if (workspaceNames[i].toUpperCase() === deleteFolder.toUpperCase()) {\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      // Check if there are assignments in folder\r\n      if (found) {\r\n\r\n        if (existsSync(currPath)) {\r\n          const folders: string[] = readdirSync(currPath);\r\n          if (folders.length > 0) {\r\n            hasAssignments = true;\r\n          }\r\n        }\r\n      }\r\n      return hasAssignments;\r\n    } catch (e) {\r\n      return Promise.reject(e.message);\r\n    }\r\n  });\r\n}\r\n","import {AnnotationFactory} from 'annotpdf';\r\nimport {PageSizes, PDFDocument, PDFPageDrawSVGOptions, rgb, PDFPageDrawTextOptions, RotationTypes, StandardFonts} from 'pdf-lib';\r\nimport {IconTypeEnum} from '@shared/info-objects/icon-type.enum';\r\nimport {HIGHLIGHT_HEIGHT as HIGHTLIGHT_HEIGHT_px} from '../constants';\r\nimport {MarkCoordinate, MarkInfo} from '@shared/info-objects/mark.info';\r\nimport {IconSvgEnum} from '@shared/info-objects/icon-svg.enum';\r\nimport {adjustPointsForResults, hexRgb, RgbaObject, rgbHex} from './pdf-utils';\r\nimport {readFile} from 'fs/promises';\r\nimport {MarkingSubmissionInfo} from '@shared/info-objects/submission.info';\r\nimport { isNil } from 'lodash';\r\n\r\nconst getRgbScale = (rgbValue: number): number => {\r\n  return +parseFloat(((rgbValue / 255) + '')).toFixed(2);\r\n};\r\nconst COORD_CONSTANT = 72 / 96;\r\nconst HIGHLIGHT_HEIGHT = HIGHTLIGHT_HEIGHT_px * COORD_CONSTANT;\r\nconst CIRCLE_DIAMETER = (37 * COORD_CONSTANT);\r\nconst CIRCLE_SIZE = CIRCLE_DIAMETER / 2;\r\nconst TEXT_ANNOTATION_SIZE = 20 * COORD_CONSTANT;\r\nconst MARK_FONT_SIZE = 12;\r\n\r\ninterface AnnotationSession {\r\n  data: Uint8Array;\r\n  totalMark: number;\r\n  generalMarks: number;\r\n  sectionMarks: string[];\r\n}\r\n\r\n\r\nfunction rotatePages(session: AnnotationSession, submissionInfo: MarkingSubmissionInfo): Promise<AnnotationSession> {\r\n  return PDFDocument.load(session.data).then((pdfDoc) => {\r\n    pdfDoc.getPages().forEach((p, index) => {\r\n      const pageSettings = submissionInfo.pageSettings[index];\r\n\r\n      if (pageSettings && pageSettings.rotation) {\r\n        p.setRotation({\r\n          type: RotationTypes.Degrees,\r\n          angle: pageSettings.rotation\r\n        });\r\n      } else if (p.getRotation().type === RotationTypes.Radians) {\r\n        // Convert radians to degrees\r\n        p.setRotation({\r\n          type: RotationTypes.Degrees,\r\n          angle: p.getRotation().angle * (180 / Math.PI)\r\n        });\r\n      }\r\n    });\r\n    return pdfDoc.save();\r\n  }).then((data) => {\r\n    session.data = data;\r\n    return session;\r\n  });\r\n}\r\n\r\nfunction rotateCoord(\r\n  coord: MarkCoordinate,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  angle: number,\r\n  pageWidth: number,\r\n  pageHeight: number): MarkCoordinate {\r\n  if (angle === 90) {\r\n    return {\r\n      ...coord,\r\n      x : coord.y - offsetY,\r\n      y : coord.x + offsetX\r\n    };\r\n  } else if (angle === 180) {\r\n    return {\r\n      ...coord,\r\n      x: pageWidth - coord.x - offsetX,\r\n      y: coord.y - offsetY\r\n    };\r\n  } else if (angle === 270) {\r\n    return {\r\n      ...coord,\r\n      x: pageWidth - (coord.y - offsetY),\r\n      y: pageHeight - (coord.x + offsetX)\r\n    };\r\n  } else {\r\n    return {\r\n      ...coord,\r\n      x: coord.x + offsetX,\r\n      y : pageHeight - coord.y + offsetY\r\n    };\r\n  }\r\n}\r\n\r\nfunction rotateBox(\r\n  x: number,\r\n  y: number,\r\n  w: number,\r\n  h: number,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  angle: number,\r\n  pageWidth: number,\r\n  pageHeight: number): [number, number, number, number] {\r\n  if (angle === 90) {\r\n    return [\r\n      /*x1 */ y - offsetY,\r\n      /*y1 */ x + offsetX,\r\n      /*x2 */ y + h - offsetY,\r\n      /*y2 */ x + w + offsetX,\r\n    ];\r\n  } else if (angle === 180) {\r\n    return [\r\n      /*x1 */ pageWidth - x - w - offsetX,\r\n      /*y1 */ y - offsetY,\r\n      /*x2 */ pageWidth - x - offsetX,\r\n      /*y2 */ y + h - offsetY // Down\r\n    ];\r\n  } else if (angle === 270) {\r\n    return [\r\n      /*x1 */ pageWidth  - (y - offsetY),\r\n      /*y1 */ pageHeight - (x + offsetX),\r\n      /*x2 */ pageWidth  - (y + h - offsetY),\r\n      /*y2 */ pageHeight - (x + w + offsetX),\r\n    ];\r\n  } else {\r\n    return [\r\n      /*x1 */ x + offsetX,\r\n      /*y1 */ pageHeight - y - h + offsetY,\r\n      /*x2 */ x + w + offsetX,\r\n      /*y2 */ pageHeight - y  + offsetY\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Transform the coords to match the PDF scale\r\n * @param coords\r\n */\r\nfunction transform(coords: MarkCoordinate): MarkCoordinate {\r\n  return {\r\n    ...coords,\r\n    width: coords.width ? coords.width * COORD_CONSTANT : null,\r\n    x:  (coords.x * COORD_CONSTANT),\r\n    y : (coords.y * COORD_CONSTANT)\r\n  };\r\n}\r\n\r\n/**\r\n * Use the annotation library to add annotations\r\n * @param session\r\n * @param marks\r\n */\r\nfunction addAnnotations(session: AnnotationSession, marks: MarkInfo[][] = []): Promise<AnnotationSession> {\r\n  const annotationFactory = new AnnotationFactory(session.data);\r\n  let annotationsAdded = false;\r\n  return PDFDocument.load(session.data).then((pdfDoc) => {\r\n    pdfDoc.getPages().forEach((pdfPage, pageIndex) => {\r\n\r\n      if (Array.isArray(marks[pageIndex])) {\r\n        marks[pageIndex].forEach(mark => {\r\n          const coords = transform(mark.coordinates);\r\n          if (mark.iconType === IconTypeEnum.NUMBER) {\r\n\r\n            session.totalMark += (mark.totalMark) ? mark.totalMark : 0;\r\n            const sectionText = mark.sectionLabel + (isNil(mark.totalMark) ? ' ' : ' = ' + mark.totalMark);\r\n            annotationFactory.createSquareAnnotation({\r\n              page: pageIndex,\r\n              rect: rotateBox(\r\n                coords.x,\r\n                coords.y,\r\n                TEXT_ANNOTATION_SIZE,\r\n                TEXT_ANNOTATION_SIZE,\r\n                (CIRCLE_DIAMETER - TEXT_ANNOTATION_SIZE) / 2,\r\n                (TEXT_ANNOTATION_SIZE / 2) - CIRCLE_SIZE,\r\n                pdfPage.getRotation().angle,\r\n                pdfPage.getWidth(),\r\n                pdfPage.getHeight()\r\n              ),\r\n              color: {\r\n                r: 255,\r\n                g: 255,\r\n                b: 255\r\n              },\r\n              opacity: 0.0001, // Make it invisible\r\n              contents: mark.comment || ' ', // TODO check the popup goes missing\r\n              author: sectionText\r\n            });\r\n            if (!isNil(mark.totalMark)) {\r\n              session.sectionMarks.push(sectionText);\r\n            }\r\n            annotationsAdded = true;\r\n          } else if (mark.iconType === IconTypeEnum.HIGHLIGHT) {\r\n            const colorComponents = mark.colour.match(/(\\d\\.?)+/g);\r\n            // const annot = annotationFactory.createSquareAnnotation({\r\n            const annot = annotationFactory.createHighlightAnnotation({\r\n              page: pageIndex,\r\n              rect: rotateBox(\r\n                coords.x,\r\n                coords.y,\r\n                coords.width,\r\n                HIGHLIGHT_HEIGHT,\r\n                0,\r\n                0,\r\n                pdfPage.getRotation().angle,\r\n                pdfPage.getWidth(),\r\n                pdfPage.getHeight()\r\n              ),\r\n              color: {\r\n                r: +colorComponents[0],\r\n                g: +colorComponents[1],\r\n                b: +colorComponents[2]\r\n              },\r\n              opacity: +colorComponents[3],\r\n              contents: mark.comment || (mark.sectionLabel ? ' ' : ''),\r\n              author: mark.sectionLabel || ''\r\n            });\r\n\r\n            annot.createDefaultAppearanceStream();\r\n            annotationsAdded = true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    if (annotationsAdded) {\r\n      session.data = annotationFactory.write();\r\n    }\r\n    return session;\r\n  });\r\n}\r\n\r\nfunction addPdfMarks(session: AnnotationSession, marks: MarkInfo[][]): Promise<AnnotationSession> {\r\n  return PDFDocument.load(session.data).then((pdfDoc) => {\r\n    const font = pdfDoc.embedStandardFont(StandardFonts.CourierBold);\r\n\r\n    pdfDoc.getPages().forEach((pdfPage, pageIndex) => {\r\n      if (Array.isArray(marks[pageIndex])) {\r\n        marks[pageIndex].forEach(mark => {\r\n\r\n          if (mark.iconType === IconTypeEnum.HIGHLIGHT) {\r\n            // Nothing to do here for a highlight\r\n            return;\r\n          }\r\n\r\n          let coords = transform(mark.coordinates);\r\n          let colours: RgbaObject = hexRgb('#3b487d');\r\n          if (mark.colour.startsWith('#')) {\r\n            colours = hexRgb(mark.colour);\r\n          } else if (mark.colour.startsWith('rgb')) {\r\n            colours = hexRgb('#' + rgbHex(mark.colour));\r\n          }\r\n          if (mark.iconType ===  IconTypeEnum.NUMBER) {\r\n\r\n            if (isNil(mark.totalMark)) {\r\n\r\n              coords = rotateCoord(\r\n                coords,\r\n                (36 - (24 * 96 / 72)) / 2,\r\n                (36 - (24 * 96 / 72)) / -2,\r\n                pdfPage.getRotation().angle,\r\n                pdfPage.getWidth(),\r\n                pdfPage.getHeight()\r\n              );\r\n              const options: PDFPageDrawSVGOptions = {\r\n                x: coords.x,\r\n                y: coords.y,\r\n                color: rgb(getRgbScale(colours.red), getRgbScale(colours.green), getRgbScale(colours.blue)),\r\n                rotate: pdfPage.getRotation(),\r\n              };\r\n\r\n              pdfPage.drawSvgPath(IconSvgEnum.NUMBER_SVG, options);\r\n            } else {\r\n\r\n              const circleCoords = rotateCoord(\r\n                coords,\r\n                CIRCLE_SIZE,\r\n                -CIRCLE_SIZE,\r\n                pdfPage.getRotation().angle,\r\n                pdfPage.getWidth(),\r\n                pdfPage.getHeight()\r\n              );\r\n              const circleOptions = {\r\n                x: circleCoords.x,\r\n                y: circleCoords.y,\r\n                size: CIRCLE_SIZE,\r\n                color: rgb(getRgbScale(colours.red), getRgbScale(colours.green), getRgbScale(colours.blue))\r\n              };\r\n              pdfPage.drawCircle(circleOptions);\r\n\r\n              const w = font.widthOfTextAtSize(mark.totalMark + '', MARK_FONT_SIZE);\r\n              const h = font.heightAtSize(MARK_FONT_SIZE);\r\n              coords = rotateCoord(\r\n                coords,\r\n                ((CIRCLE_DIAMETER - w) / 2),\r\n                -h - (CIRCLE_SIZE / 2),\r\n                pdfPage.getRotation().angle,\r\n                pdfPage.getWidth(),\r\n                pdfPage.getHeight()\r\n              );\r\n              const markOption: PDFPageDrawTextOptions = {\r\n                x: coords.x,\r\n                y: coords.y,\r\n                size: MARK_FONT_SIZE,\r\n                font: font,\r\n                color: rgb(1, 1, 1),\r\n                rotate: pdfPage.getRotation(),\r\n              };\r\n              pdfPage.drawText(mark.totalMark + '', markOption);\r\n            }\r\n          } else {\r\n\r\n            coords = rotateCoord(\r\n              coords,\r\n              (36 - (24 * 96 / 72)) / 2,\r\n              (36 - (24 * 96 / 72)) / -2,\r\n              pdfPage.getRotation().angle,\r\n              pdfPage.getWidth(),\r\n              pdfPage.getHeight());\r\n            const options: PDFPageDrawSVGOptions = {\r\n              x: coords.x,\r\n              y: coords.y,\r\n              borderColor: rgb(getRgbScale(colours.red), getRgbScale(colours.green), getRgbScale(colours.blue)),\r\n              color: rgb(getRgbScale(colours.red), getRgbScale(colours.green), getRgbScale(colours.blue)),\r\n              rotate: pdfPage.getRotation(),\r\n            };\r\n\r\n            session.totalMark += (mark.totalMark) ? mark.totalMark : 0;\r\n            session.generalMarks += (mark.totalMark) ? mark.totalMark : 0;\r\n\r\n            if (mark.iconType === IconTypeEnum.FULL_MARK) {\r\n              pdfPage.drawSvgPath(IconSvgEnum.FULL_MARK_SVG, options);\r\n            } else if (mark.iconType === IconTypeEnum.HALF_MARK) {\r\n              pdfPage.drawSvgPath(IconSvgEnum.FULL_MARK_SVG, options);\r\n              pdfPage.drawSvgPath(IconSvgEnum.HALF_MARK_SVG, {\r\n                x: coords.x,\r\n                y: coords.y,\r\n                borderWidth: 2,\r\n                borderColor: rgb(getRgbScale(colours.red), getRgbScale(colours.green), getRgbScale(colours.blue)),\r\n                color: rgb(getRgbScale(colours.red), getRgbScale(colours.green), getRgbScale(colours.blue)),\r\n                rotate: {\r\n                  type: RotationTypes.Degrees,\r\n                  angle: pdfPage.getRotation().angle\r\n                }\r\n              });\r\n            } else if (mark.iconType === IconTypeEnum.CROSS) {\r\n              pdfPage.drawSvgPath(IconSvgEnum.CROSS_SVG, options);\r\n            } else if (mark.iconType === IconTypeEnum.ACK_MARK) {\r\n              pdfPage.drawSvgPath(IconSvgEnum.ACK_MARK_SVG, options);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n    addResultsPage(session, pdfDoc);\r\n    return pdfDoc.save().then((data) => {\r\n      session.data = data;\r\n      return session;\r\n    });\r\n  });\r\n}\r\n\r\n\r\nfunction addResultsPage(session: AnnotationSession, pdfDoc: PDFDocument) {\r\n  let resultsPage = pdfDoc.addPage(PageSizes.A4);\r\n  let y = 800;\r\n  const xPosition = 25;\r\n  const headerSize = 14;\r\n  const borderColor = {red: 0.71, green: 0.71, blue: 0.71};\r\n\r\n  resultsPage.drawText('Results', {x: resultsPage.getWidth() / 2, y, size: headerSize});\r\n  y = adjustPointsForResults(y, 15);\r\n  y = adjustPointsForResults(y, 15);\r\n\r\n  resultsPage.drawText('_________________________________________________________________________________',\r\n    {\r\n      x: xPosition,\r\n      y: 775,\r\n      color: rgb(borderColor.red, borderColor.green, borderColor.blue),\r\n      size: MARK_FONT_SIZE\r\n    });\r\n  y = adjustPointsForResults(y, 15);\r\n\r\n  for (let i = 0; i < session.sectionMarks.length; i++) {\r\n    y = adjustPointsForResults(y, 15);\r\n    resultsPage.drawText(session.sectionMarks[i] + '', {x: xPosition, y, size: MARK_FONT_SIZE});\r\n    resultsPage.drawText('', {x: xPosition, y, size: MARK_FONT_SIZE});\r\n\r\n    if (y <= 5) {\r\n      resultsPage = pdfDoc.addPage(PageSizes.A4);\r\n      y = 800;\r\n    }\r\n  }\r\n  y = adjustPointsForResults(y, 15);\r\n  resultsPage.drawText('General Marks = ' + session.generalMarks, {x: xPosition, y, size: MARK_FONT_SIZE});\r\n  y = adjustPointsForResults(y, 15);\r\n  resultsPage.drawText('_________________________________________________________________________________', {\r\n    x: xPosition,\r\n    y,\r\n    color: rgb(borderColor.red, borderColor.green, borderColor.blue),\r\n    size: MARK_FONT_SIZE\r\n  });\r\n  y = adjustPointsForResults(y, 15);\r\n  resultsPage.drawText('', {x: xPosition, y, size: MARK_FONT_SIZE});\r\n  y = adjustPointsForResults(y, 15);\r\n  resultsPage.drawText('Total = ' + session.totalMark, {x: xPosition, y, size: MARK_FONT_SIZE});\r\n}\r\n\r\nexport function annotatePdfFile(\r\n  filePath: string,\r\n  submissionInfo: MarkingSubmissionInfo): Promise<{ pdfBytes: Uint8Array, totalMark: number }> {\r\n  return readFile(filePath)\r\n    .then((data) => {\r\n      const session: AnnotationSession = {\r\n        data: data,\r\n        totalMark: 0,\r\n        sectionMarks: [],\r\n        generalMarks: 0\r\n      };\r\n      return session;\r\n    })\r\n    .then(session => rotatePages(session, submissionInfo))\r\n    .then((session) => {\r\n      return addAnnotations(session, submissionInfo.marks);\r\n    })\r\n    .then((session) => addPdfMarks(session, submissionInfo.marks))\r\n    .then((session) => {\r\n      return {\r\n        pdfBytes: session.data,\r\n        totalMark: session.totalMark\r\n      };\r\n    });\r\n}\r\n","\r\nexport const adjustPointsForResults = (coordinate: number, change: number): number => {\r\n  return coordinate - (change);\r\n};\r\n\r\n\r\n/**\r\n * https://github.com/sindresorhus/rgb-hex/blob/main/index.js\r\n * @param red\r\n * @param green\r\n * @param blue\r\n * @param alpha\r\n */\r\nexport function rgbHex(red, green?, blue?, alpha?) {\r\n  const isPercent = (red + (alpha || '')).toString().includes('%');\r\n\r\n  if (typeof red === 'string') {\r\n    [red, green, blue, alpha] = red.match(/(0?\\.?\\d{1,3})%?\\b/g).map(component => Number(component));\r\n  } else if (alpha !== undefined) {\r\n    alpha = Number.parseFloat(alpha);\r\n  }\r\n\r\n  if (typeof red !== 'number' ||\r\n    typeof green !== 'number' ||\r\n    typeof blue !== 'number' ||\r\n    red > 255 ||\r\n    green > 255 ||\r\n    blue > 255\r\n  ) {\r\n    throw new TypeError('Expected three numbers below 256');\r\n  }\r\n\r\n  if (typeof alpha === 'number') {\r\n    if (!isPercent && alpha >= 0 && alpha <= 1) {\r\n      alpha = Math.round(255 * alpha);\r\n    } else if (isPercent && alpha >= 0 && alpha <= 100) {\r\n      alpha = Math.round(255 * alpha / 100);\r\n    } else {\r\n      throw new TypeError(`Expected alpha value (${alpha}) as a fraction or percentage`);\r\n    }\r\n\r\n    // tslint:disable-next-line:no-bitwise\r\n    alpha = (alpha | 1 << 8).toString(16).slice(1); // eslint-disable-line no-mixed-operators\r\n  } else {\r\n    alpha = '';\r\n  }\r\n\r\n  // tslint:disable-next-line:no-bitwise\r\n  return ((blue | green << 8 | red << 16) | 1 << 24).toString(16).slice(1) + alpha;\r\n}\r\n\r\n\r\n\r\nconst hexCharacters = 'a-f\\\\d';\r\nconst match3or4Hex = `#?[${hexCharacters}]{3}[${hexCharacters}]?`;\r\nconst match6or8Hex = `#?[${hexCharacters}]{6}([${hexCharacters}]{2})?`;\r\nconst nonHexChars = new RegExp(`[^#${hexCharacters}]`, 'gi');\r\nconst validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i');\r\n\r\nexport interface RgbaObject {\r\n  red: number;\r\n  green: number;\r\n  blue: number;\r\n  alpha: number;\r\n}\r\n\r\nexport type RgbaTuple = [\r\n  red: number,\r\n  green: number,\r\n  blue: number,\r\n  alpha: number\r\n];\r\n\r\n// https://github.com/sindresorhus/hex-rgb\r\nexport function hexRgb(hex, options: any = {}): RgbaObject {\r\n  if (typeof hex !== 'string' || nonHexChars.test(hex) || !validHexSize.test(hex)) {\r\n    throw new TypeError('Expected a valid hex string');\r\n  }\r\n\r\n  hex = hex.replace(/^#/, '');\r\n  let alphaFromHex = 1;\r\n\r\n  if (hex.length === 8) {\r\n    alphaFromHex = Number.parseInt(hex.slice(6, 8), 16) / 255;\r\n    hex = hex.slice(0, 6);\r\n  }\r\n\r\n  if (hex.length === 4) {\r\n    alphaFromHex = Number.parseInt(hex.slice(3, 4).repeat(2), 16) / 255;\r\n    hex = hex.slice(0, 3);\r\n  }\r\n\r\n  if (hex.length === 3) {\r\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n  }\r\n\r\n  const number = Number.parseInt(hex, 16);\r\n  // tslint:disable:no-bitwise\r\n  const red = number >> 16;\r\n  const green = (number >> 8) & 255;\r\n  const blue = number & 255;\r\n  const alpha = typeof options.alpha === 'number' ? options.alpha : alphaFromHex;\r\n\r\n  return {red, green, blue, alpha};\r\n}\r\n","import {PageSizes, PDFDocument, rgb, RotationTypes} from 'pdf-lib';\r\nimport {isNullOrUndefinedOrEmpty} from '../utils';\r\nimport {adjustPointsForResults} from './pdf-utils';\r\nimport {IRubric} from '@shared/info-objects/rubric.class';\r\nimport {readFile} from 'fs/promises';\r\nimport {RubricSubmissionInfo} from '@shared/info-objects/submission.info';\r\n\r\nfunction rotatePages(pdfDoc: PDFDocument, submissionInfo: RubricSubmissionInfo) {\r\n  pdfDoc.getPages().forEach((p, index) => {\r\n      const pageSettings = submissionInfo.pageSettings[index];\r\n\r\n      if (pageSettings && pageSettings.rotation) {\r\n        p.setRotation({\r\n          type: RotationTypes.Degrees,\r\n          angle: pageSettings.rotation\r\n        });\r\n      } else if (p.getRotation().type === RotationTypes.Radians) {\r\n        // Convert radians to degrees\r\n        p.setRotation({\r\n          type: RotationTypes.Degrees,\r\n          angle: p.getRotation().angle * (180 / Math.PI)\r\n        });\r\n      }\r\n    });\r\n}\r\n\r\nexport function annotatePdfRubric(filePath: string, submissionInfo: RubricSubmissionInfo, rubric: IRubric): Promise<{ pdfBytes: Uint8Array, totalMark: number }> {\r\n  return readFile(filePath)\r\n    .then(data => PDFDocument.load(data))\r\n    .then(pdfDoc => {\r\n      rotatePages(pdfDoc, submissionInfo);\r\n      let totalMark = 0;\r\n      const marksPageSize: [number, number] = [1200.89, 595.28];\r\n      let resultsPage = pdfDoc.addPage(marksPageSize);\r\n      let yPosition: number = resultsPage.getHeight() - 15;\r\n      let xPosition = 25;\r\n      const headerSize = 14;\r\n      const rubricTextSize = 8;\r\n      const borderColor = {red: 0.21, green: 0.21, blue: 0.21};\r\n      const rubricCriteriaLevelBackground = {red: 1.0, green: 1.0, blue: 1.0};\r\n      const rubricCriteriaLevelBackgroundSelected = {red: 0.93, green: 0.93, blue: 0.93};\r\n      let criteriaColors = {red: 1.0, green: 1.0, blue: 1.0};\r\n      let maxScore = 0;\r\n      rubric.criterias.forEach((value, index) => {\r\n        let curHighest = -1;\r\n        const critSelected = submissionInfo.marks[index];\r\n        value.levels.forEach((value1, index1, array) => {\r\n          if (critSelected === index1) {\r\n            totalMark = totalMark + parseFloat(value1.score.toString());\r\n          }\r\n          if (value1.score > curHighest) {\r\n            curHighest = value1.score;\r\n          }\r\n        });\r\n        maxScore = maxScore + parseFloat(curHighest.toString());\r\n      });\r\n\r\n      // 841 pixels x 595.28 pixels\r\n      resultsPage.drawText('Results', {x: xPosition, y: yPosition, size: headerSize});\r\n      yPosition = adjustPointsForResults(yPosition, 15); // y = 580\r\n      resultsPage.drawText('Total Mark: ' + totalMark + ' / ' + maxScore, {x: xPosition, y: yPosition, size: headerSize});\r\n\r\n      yPosition = adjustPointsForResults(yPosition, 20); // spacing between header and blocks.\r\n\r\n      // Rubric - loop for criterias\r\n      let criteriaCount = 0;\r\n      rubric.criterias.forEach((value, criteriaIndex) => {\r\n        criteriaCount++;\r\n        yPosition = adjustPointsForResults(yPosition, 130);\r\n        resultsPage.drawRectangle({\r\n          x: xPosition,\r\n          y: yPosition,\r\n          width: 130,\r\n          height: 130,\r\n          borderWidth: 1,\r\n          color: rgb(rubricCriteriaLevelBackground.red, rubricCriteriaLevelBackground.green, rubricCriteriaLevelBackground.blue),\r\n          borderColor: rgb(borderColor.red, borderColor.green, borderColor.blue),\r\n        });\r\n\r\n        resultsPage.drawText(rubric.criterias[criteriaIndex].name, {x: (xPosition + 3), y: (yPosition + 110), size: rubricTextSize});\r\n        let critSelected = submissionInfo.marks[criteriaIndex];\r\n        const splitDesc = (rubric.criterias[criteriaIndex].description.split(' '));\r\n        const criteriaDescriptionX = xPosition + 1;\r\n        let criteriaDescriptionY = yPosition + 90; // remember + is upwards, - is down, and function minues by default.\r\n        // Rubric - loop for criteria-Descriptions -- start\r\n        for (let index = 0; index <= splitDesc.length; index = index + 3) {\r\n          let curString = '';\r\n          if (!isNullOrUndefinedOrEmpty(splitDesc[index])) {\r\n            curString = curString + splitDesc[index] + ' ';\r\n          }\r\n          if (!isNullOrUndefinedOrEmpty(splitDesc[index + 1])) {\r\n            curString = curString + splitDesc[index + 1] + ' ';\r\n          }\r\n          if (!isNullOrUndefinedOrEmpty(splitDesc[index + 2])) {\r\n            curString = curString + splitDesc[index + 2] + ' ';\r\n          }\r\n          resultsPage.drawText(curString, {x: (criteriaDescriptionX + 3), y: (criteriaDescriptionY), size: rubricTextSize});\r\n          criteriaDescriptionY = criteriaDescriptionY - 10;\r\n        }\r\n        let criteriaLevelX = xPosition;\r\n        const criteriaLevelY = yPosition;\r\n\r\n        rubric.criterias[criteriaIndex].levels.forEach((level, levelIndex) => {\r\n          // check selected here against marks.\r\n          if (critSelected === levelIndex) {\r\n            criteriaColors = rubricCriteriaLevelBackgroundSelected;\r\n            critSelected = -1;\r\n          } else {\r\n            criteriaColors = rubricCriteriaLevelBackground;\r\n          }\r\n\r\n          criteriaLevelX = criteriaLevelX + 130;\r\n          resultsPage.drawRectangle({\r\n            x: criteriaLevelX,\r\n            y: criteriaLevelY,\r\n            width: 130,\r\n            height: 130,\r\n            borderWidth: 1,\r\n            color: rgb(criteriaColors.red, criteriaColors.green, criteriaColors.blue),\r\n            borderColor: rgb(borderColor.red, borderColor.green, borderColor.blue),\r\n          });\r\n          resultsPage.drawText(level.label + ' - Marks: ' + level.score, {\r\n            x: (criteriaLevelX + 3),\r\n            y: (criteriaLevelY + 120),\r\n            size: rubricTextSize\r\n          });\r\n\r\n          const splitDesc = (level.description.replace('\\n', '').split(' '));\r\n          // let splitDesc = (level.description.replace('\\n', '').split(''));\r\n          const levelDescriptionX = criteriaLevelX + 1;\r\n          let levelDescriptionY = criteriaLevelY + 110; // remember + is upwards, - is down, and function minues by default.\r\n          // Rubric - loop for criteria-Descriptions -- start\r\n          let lineCount = 0;\r\n          for (let index = 0; index <= splitDesc.length; index += 5) {\r\n            let curString = '';\r\n            if (!isNullOrUndefinedOrEmpty(splitDesc[index])) {\r\n              curString = curString + splitDesc[index].replace('\\n', '') + ' ';\r\n            }\r\n            if (!isNullOrUndefinedOrEmpty(splitDesc[index + 1])) {\r\n              curString = curString + splitDesc[index + 1].replace('\\n', '') + ' ';\r\n            }\r\n            if (!isNullOrUndefinedOrEmpty(splitDesc[index + 2])) {\r\n              curString = curString + splitDesc[index + 2].replace('\\n', '') + ' ';\r\n            }\r\n            if (!isNullOrUndefinedOrEmpty(splitDesc[index + 3])) {\r\n              curString = curString + splitDesc[index + 3].replace('\\n', '') + ' ';\r\n            }\r\n            if (curString.length < 42) {\r\n              if (!isNullOrUndefinedOrEmpty(splitDesc[index + 4])) {\r\n                curString = curString + splitDesc[index + 4].replace('\\n', '') + ' ';\r\n              }\r\n            } else {\r\n              index--;\r\n            }\r\n            lineCount++;\r\n            if (lineCount === 12 && !isNullOrUndefinedOrEmpty(curString)) {\r\n              curString = curString + '...';\r\n              index = splitDesc.length + 1;\r\n              lineCount = 0;\r\n            }\r\n            resultsPage.drawText(curString, {x: (levelDescriptionX + 1), y: (levelDescriptionY), size: rubricTextSize - 2});\r\n            levelDescriptionY = levelDescriptionY - 10;\r\n          }\r\n          // Rubric - loop for level descripotion -- end\r\n        });\r\n\r\n        // check for max pages. Maybe use dimnesnsions rather?\r\n        if ((criteriaCount === 4) && (rubric.criterias.length > criteriaCount)) {\r\n          resultsPage = pdfDoc.addPage(marksPageSize);\r\n          yPosition = resultsPage.getHeight() - 15;\r\n          xPosition = 25;\r\n          criteriaCount = 0;\r\n        }\r\n      });\r\n\r\n\r\n      return pdfDoc.save().then((data) => {\r\n        return { pdfBytes: data, totalMark };\r\n      });\r\n    });\r\n}\r\n","import * as unzipper from 'unzipper';\r\nimport * as etl from 'etl';\r\nimport {\r\n  constants,\r\n  createReadStream,\r\n  existsSync,\r\n  lstatSync,\r\n  mkdirSync,\r\n  readdirSync,\r\n  rmdirSync,\r\n  unlinkSync,\r\n  writeFileSync\r\n} from 'fs';\r\nimport {access, writeFile} from 'fs/promises';\r\nimport {dirname, extname, sep} from 'path';\r\nimport {PDFDocument} from 'pdf-lib';\r\nimport {noop} from 'rxjs';\r\nimport {IpcResponse} from '@shared/ipc/ipc-response';\r\nimport {IpcMainInvokeEvent} from 'electron';\r\nimport {FEEDBACK_FOLDER, GRADES_FILE, SUBMISSION_FOLDER} from '@shared/constants/constants';\r\n\r\ndeclare type IpcHandler<T> = (event: IpcMainInvokeEvent, ...args: any[]) => Promise<T>;\r\n\r\n/**\r\n * This is a middleware response used for IPC to work around a bug in electron where rejected promises\r\n * loose the original reason. This way, the main process always returns a resolved promise, but the result IpcResponse\r\n * will contain information if there was an error or not, and then reject the promise in the renderer side\r\n * https://github.com/electron/electron/issues/24427\r\n * @param listener\r\n */\r\nexport function toIpcResponse<T>(listener: IpcHandler<T>): IpcHandler<IpcResponse<T>> {\r\n  // Return a function that can be used as an IPC handler\r\n  return (event, ...args) => {\r\n    return listener(event, ...args).then(\r\n      (data) => {\r\n        return {\r\n          data\r\n        } as IpcResponse<T>;\r\n      }, (error) => {\r\n        return {\r\n          error\r\n        } as IpcResponse<T>;\r\n      });\r\n  };\r\n}\r\n\r\nexport const isFunction = (functionToCheck) => {\r\n  return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\r\n};\r\n\r\nexport const isNullOrUndefined = (object: any): boolean => {\r\n  return (object === null || object === undefined);\r\n};\r\n\r\nexport const isNullOrUndefinedOrEmpty = (object: string): boolean => {\r\n  return (object === null || object === undefined || object === '');\r\n};\r\n\r\n\r\nexport function writeToFile(filePath: string,\r\n                     data: Uint8Array | string,\r\n                     customSuccessMsg: string = null,\r\n                     customFailureMsg: string = null): Promise<string> {\r\n  return writeFile(filePath, data).then(() => {\r\n    return (customSuccessMsg) ? customSuccessMsg : 'Successfully saved to file!';\r\n  }, (err) => {\r\n    return Promise.reject((customFailureMsg) ? customFailureMsg : err.message);\r\n  });\r\n}\r\n\r\n\r\n/*HELPER FUNCTIONS*/\r\nexport function checkAccess(filePath: string): Promise<any> {\r\n  return access(filePath, constants.F_OK).then(noop, (err) => {\r\n      return Promise.reject(err.message);\r\n  });\r\n}\r\n\r\n/*END HELPER FUNCTIONS*/\r\n\r\n\r\n\r\nexport const isJson = (str) => {\r\n  try {\r\n    JSON.parse(str);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n\r\n\r\nexport const deleteFolderRecursive = (path) => {\r\n  if (existsSync(path)) {\r\n    readdirSync(path).forEach(function(file, index) {\r\n      const curPath = path + '/' + file;\r\n      if (isFolder(curPath)) { // recurse\r\n        deleteFolderRecursive(curPath);\r\n      } else { // delete file\r\n        unlinkSync(curPath);\r\n      }\r\n    });\r\n    rmdirSync(path);\r\n  }\r\n};\r\n\r\nexport function isFolder(curPath: string) {\r\n  return lstatSync(curPath).isDirectory();\r\n}\r\n\r\n\r\n\r\nexport const extractAssignmentZipFile = async (\r\n  file: string,\r\n  destination: string,\r\n  newFolder: string,\r\n  oldFolder: string,\r\n  assignmentName: string,\r\n  assignmentType: string) => {\r\n  // TODO Should we validate the zip structure based on assignment type?\r\n  if (assignmentType === 'Generic') {\r\n    let skippedFirst = 1;\r\n    return await createReadStream(file)\r\n      .pipe(unzipper.Parse())\r\n      .pipe(etl.map(async entry => {\r\n        const subheaders = `'Display ID','ID','Last Name','First Name','Mark','Submission date','Late submission'\\n`;\r\n        let csvString = '';\r\n        const asnTitle = assignmentName;\r\n        let dir = '';\r\n        const isSet = true;\r\n        if (entry.type === 'File') {\r\n          const content = await entry.buffer();\r\n          entry.path = entry.path.replace(oldFolder, newFolder);\r\n\r\n          const directory = dirname(destination + entry.path.replace('/', sep));\r\n\r\n          if (!existsSync(directory)) {\r\n            mkdirSync(directory, {recursive: true});\r\n          }\r\n          try {\r\n            const pdfDoc = await PDFDocument.load(content);\r\n            const fileName = entry.path;\r\n            const tempDetails = fileName.substring((fileName.indexOf('/') + 1));\r\n            const splitArray = tempDetails.split('_');\r\n\r\n            const studentName = splitArray[1];\r\n            const studentSurname = splitArray[0];\r\n            const studentID = splitArray[2];\r\n            const studentDirectory = studentSurname + ', ' + studentName + ' (' + studentID + ')';\r\n            const csvData = `${studentID.toUpperCase()},${studentID.toUpperCase()},${studentSurname.toUpperCase()},${studentName.toUpperCase()},,,\\n`;\r\n            csvString = csvString + csvData;\r\n            dir = directory;\r\n            mkdirSync(directory + sep + studentDirectory, {recursive: true});\r\n            mkdirSync(directory + sep + studentDirectory + sep + FEEDBACK_FOLDER, {recursive: true});\r\n            mkdirSync(directory + sep + studentDirectory + sep + SUBMISSION_FOLDER, {recursive: true});\r\n            if (!existsSync(directory + GRADES_FILE) && skippedFirst === 1) {\r\n              const headers = `'${asnTitle}','SCORE_GRADE_TYPE'\\n`;\r\n              const csvFullString = headers + `''\\n` + subheaders;\r\n              skippedFirst++;\r\n              await writeFileSync(directory + sep + GRADES_FILE, csvFullString, {flag: 'a'});\r\n              await writeFileSync(directory + sep + GRADES_FILE, csvString, {flag: 'a'});\r\n            } else {\r\n              skippedFirst++;\r\n              await writeFileSync(directory + sep + GRADES_FILE, csvString, {flag: 'a'});\r\n            }\r\n            // if (skippedFirst === 1) {\r\n            //   await writeFileSync(directory + GRADES_FILE, csvString, {flag: 'a'});\r\n            //   skippedFirst++;\r\n            // }\r\n            const pdfBytes = await pdfDoc.save();\r\n            writeFileSync(directory + '/' + studentDirectory + '/' + SUBMISSION_FOLDER + '/' + tempDetails, pdfBytes);\r\n          } catch (exception) {\r\n            console.error(exception);\r\n          }\r\n        } else {\r\n          entry.path = entry.path.replace(oldFolder, newFolder);\r\n          const directory = destination + entry.path.replace('/', sep);\r\n          if (!existsSync(directory)) {\r\n            mkdirSync(directory, {recursive: true});\r\n          }\r\n          if (!(existsSync(directory + GRADES_FILE))) {\r\n            const headers = `'${asnTitle}','SCORE_GRADE_TYPE'\\n`;\r\n            const csvFullString = headers + `''\\n` + subheaders;\r\n            skippedFirst++;\r\n            await writeFileSync(directory + GRADES_FILE, csvFullString, {flag: 'a'});\r\n            await writeFileSync(directory + GRADES_FILE, csvString, {flag: 'a'});\r\n          } else {\r\n            skippedFirst++;\r\n            await writeFileSync(directory + GRADES_FILE, csvString, {flag: 'a'});\r\n          }\r\n        }\r\n      })).promise();\r\n\r\n  } else {\r\n    return await createReadStream(file)\r\n      .pipe(unzipper.Parse())\r\n      .pipe(etl.map(async entry => {\r\n        if (entry.type === 'File') {\r\n          //\r\n          const content = await entry.buffer();\r\n          entry.path = entry.path.replace(oldFolder, newFolder);\r\n          const directory = dirname(destination + entry.path.replace('/', sep));\r\n          const extension = extname(destination + entry.path.replace('/', sep)).substring(1);\r\n\r\n          if (!existsSync(directory)) {\r\n            mkdirSync(directory, {recursive: true});\r\n          }\r\n          try {\r\n            if (entry.path.indexOf(SUBMISSION_FOLDER) !== -1 && extension === 'pdf') {\r\n              // await writeFileSync(destination + entry.path.replace('/', sep),  content);\r\n              const pdfDoc = await PDFDocument.load(content);\r\n              const pdfBytes = await pdfDoc.save();\r\n              await writeFileSync(destination + entry.path.replace('/', sep), pdfBytes);\r\n            } else {\r\n              await writeFileSync(destination + entry.path.replace('/', sep), content);\r\n            }\r\n          } catch (exception) {\r\n            console.error(exception);\r\n          }\r\n        } else {\r\n          entry.path = entry.path.replace(oldFolder, newFolder);\r\n          const directory = destination + entry.path.replace('/', sep);\r\n          if (!existsSync(directory)) {\r\n            mkdirSync(directory, {recursive: true});\r\n          }\r\n          entry.autodrain();\r\n        }\r\n      })).promise();\r\n  }\r\n};\r\n\r\nexport const validateRequest = (requiredKeys = [], receivedKeys = []): boolean => {\r\n  let invalidKeyFound = false;\r\n  for (const key of receivedKeys) {\r\n    if (requiredKeys.indexOf(key) === -1) {\r\n      invalidKeyFound = true;\r\n      break;\r\n    }\r\n  }\r\n  return invalidKeyFound;\r\n};\r\n\r\nexport function isEmpty(str: string) {\r\n  return str === null || str === undefined || str.length === 0;\r\n}\r\n\r\nexport function isBlank(data: string = '') {\r\n\r\n  if (data === null || data === undefined) {\r\n    return true;\r\n  }\r\n\r\n  data += '';\r\n  return data === '' || data.trim() === '';\r\n}\r\n\r\n\r\n\r\nexport function joinError(currentMessage: string = '', newMessage: string = ''): string {\r\n  currentMessage += (!isEmpty(currentMessage)) ? `, ${newMessage}` : newMessage;\r\n  return currentMessage;\r\n}\r\n","import {TreeNode, TreeNodeType} from '@shared/info-objects/workspace';\r\n\r\nexport const DEFAULT_WORKSPACE = 'Default Workspace';\r\nexport const SUBMISSION_FOLDER = 'Submission attachment(s)';\r\nexport const FEEDBACK_FOLDER = 'Feedback Attachment(s)';\r\nexport const SETTING_FILE = '.settings.json';\r\nexport const MARK_FILE = '.marks.json';\r\nexport const GRADES_FILE = 'grades.csv';\r\n\r\nexport const PDFM_FILES = [MARK_FILE, SETTING_FILE];\r\n\r\nexport function PDFM_FILES_FILTER(treeNode: TreeNode): boolean {\r\n  return !(treeNode.type === TreeNodeType.FILE && PDFM_FILES.indexOf(treeNode.name) >= 0);\r\n}\r\n\r\n/**\r\n * < 0, a should be before\r\n * = 0, same level\r\n * > 0, a should be after\r\n * @param a\r\n * @param b\r\n * @constructor\r\n */\r\nexport const PDFM_FILE_SORT = (a: TreeNode, b: TreeNode) => {\r\n  let diff = a.type - b.type;\r\n  if (diff === 0) {\r\n    diff = a.name.localeCompare(b.name);\r\n  }\r\n  return diff;\r\n};\r\n","const SakaiConstantsObj: any = {\r\n  studentDetailsRegEx: /^.*,.*\\([0-9]+\\)$/,\r\n  feedbackDirectoryName:  'Feedback Attachment(s)',\r\n  submissionDirectoryName: 'Submission attachment(s)',\r\n  commentsFileName: 'comments.txt',\r\n  timestampFileName: 'timestamp.txt',\r\n\r\n  assignmentRootFiles: ['grades.csv', 'grades.xls', 'grades.xlsx'],\r\n  formatErrorMessage : 'Invalid zip format. Please select a file exported from Sakai',\r\n};\r\n\r\n\r\nSakaiConstantsObj.studentFiles = [SakaiConstantsObj.commentsFileName, SakaiConstantsObj.timestampFileName];\r\nSakaiConstantsObj.studentDirectories = [SakaiConstantsObj.feedbackDirectoryName, SakaiConstantsObj.submissionDirectoryName];\r\n\r\nexport const SakaiConstants = SakaiConstantsObj;\r\n","export enum IconSvgEnum {\r\n  FULL_MARK_SVG = \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\",\r\n  HALF_MARK_SVG = \"M19.9795560836792,7.394250392913818 L23.35551357269287,11.079283714294434\",\r\n  ACK_MARK_SVG  = \"M12.45 16h2.09L9.43 3H7.57L2.46 16h2.09l1.12-3h5.64l1.14 3zm-6.02-5L8.5 5.48 10.57 11H6.43zm15.16.59l-8.09 8.09L9.83 16l-1.41 1.41 5.09 5.09L23 13l-1.41-1.41z\",\r\n  CROSS_SVG     = \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\",\r\n  NUMBER_SVG    = \"M21.99 4c0-1.1-.89-2-1.99-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4-.01-18zM18 14H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\",\r\n}\r\n","export enum IconTypeEnum {\r\n  FULL_MARK = 'FULL_MARK',\r\n  HALF_MARK = 'HALF_MARK',\r\n  ACK_MARK  = 'ACK_MARK',\r\n  CROSS     = 'CROSS',\r\n  NUMBER    = 'NUMBER',\r\n  COMMENT   = 'COMMENT',\r\n  HIGHLIGHT   = 'HIGHLIGHT',\r\n}\r\n","import {MarkInfo} from \"@shared/info-objects/mark.info\";\r\n\r\n\r\n/**\r\n * Current version of the settings info\r\n */\r\nexport const SubmissionInfoVersion = 1;\r\n\r\nexport enum SubmissionType {\r\n MARK = 'MARK',\r\n RUBRIC = 'RUBRIC'\r\n}\r\n\r\nexport interface PageSettings {\r\n  rotation: number;\r\n}\r\n\r\nexport class SubmissionInfo {\r\n  type: SubmissionType;\r\n  version = SubmissionInfoVersion;\r\n  pageSettings: PageSettings[] = [];\r\n  marks: number[] | MarkInfo[][];\r\n\r\n  constructor(version: number = SubmissionInfoVersion) {\r\n    this.version = version;\r\n  }\r\n}\r\n\r\nexport class RubricSubmissionInfo extends SubmissionInfo {\r\n  type = SubmissionType.RUBRIC;\r\n  marks: number[] = [];\r\n\r\n  constructor(version: number = SubmissionInfoVersion) {\r\n    super(version);\r\n  }\r\n}\r\n\r\nexport class MarkingSubmissionInfo extends SubmissionInfo {\r\n  type = SubmissionType.MARK;\r\n  marks: MarkInfo[][] = [];\r\n\r\n  constructor(version: number = SubmissionInfoVersion) {\r\n    super(version);\r\n  }\r\n}\r\n","import {find} from 'lodash';\r\n\r\nexport enum TreeNodeType {\r\n  WORKSPACE,\r\n  ASSIGNMENT,\r\n  SUBMISSION,\r\n  FEEDBACK_DIRECTORY,\r\n  SUBMISSIONS_DIRECTORY,\r\n  FILE\r\n}\r\n\r\nexport interface TreeNode {\r\n  name: string;\r\n  type: TreeNodeType;\r\n  dateModified: Date;\r\n  parent: TreeNode;\r\n  children?: TreeNode[];\r\n}\r\n\r\nexport interface Workspace extends TreeNode {\r\n  type: TreeNodeType.WORKSPACE;\r\n  children: WorkspaceAssignment[];\r\n  parent: null;\r\n}\r\n\r\nexport interface WorkspaceAssignment extends TreeNode {\r\n  type: TreeNodeType.ASSIGNMENT;\r\n  children: (WorkspaceFile| StudentSubmission)[];\r\n  parent: Workspace;\r\n}\r\n\r\nexport interface WorkspaceFile extends TreeNode {\r\n  type: TreeNodeType.FILE;\r\n}\r\n\r\nexport interface SubmissionAttachments extends TreeNode {\r\n  type: TreeNodeType.SUBMISSIONS_DIRECTORY;\r\n  children: WorkspaceFile[];\r\n  parent: StudentSubmission;\r\n}\r\n\r\nexport interface FeedbackAttachments extends TreeNode {\r\n  type: TreeNodeType.FEEDBACK_DIRECTORY;\r\n  children: WorkspaceFile[];\r\n  parent: StudentSubmission;\r\n}\r\n\r\nexport interface StudentSubmission extends TreeNode {\r\n  studentName: string;\r\n  studentSurname: string;\r\n  studentId: string;\r\n  children: (WorkspaceFile|SubmissionAttachments|FeedbackAttachments)[];\r\n  parent: WorkspaceAssignment;\r\n}\r\n\r\nexport function findTreeNode(path: string, roots: TreeNode[]): TreeNode {\r\n  const paths = path.split('/');\r\n  let rootNode = find(roots, {name: paths[0]});\r\n  paths.slice(1).forEach(pi => {\r\n    rootNode = rootNode.children.find(tn => tn.name === pi);\r\n  });\r\n  return rootNode;\r\n}\r\n\r\nexport function findTreeNodes(path: string, roots: TreeNode[]): TreeNode[] {\r\n  const nodes: TreeNode[] = [];\r\n  const paths = path.split('/');\r\n  let rootNode = find(roots, {name: paths[0]});\r\n  nodes.push(rootNode);\r\n  paths.slice(1).forEach(pi => {\r\n    rootNode = rootNode.children.find(tn => tn.name === pi);\r\n    nodes.push(rootNode);\r\n  });\r\n  return nodes;\r\n}\r\n","module.exports = require(\"annotpdf\");","module.exports = require(\"csvtojson\");","module.exports = require(\"electron\");","module.exports = require(\"electron-log\");","module.exports = require(\"electron-updater\");","module.exports = require(\"etl\");","module.exports = require(\"fs-extra\");","module.exports = require(\"glob\");","module.exports = require(\"json-2-csv\");","module.exports = require(\"jszip\");","module.exports = require(\"lodash\");","module.exports = require(\"pdf-lib\");","module.exports = require(\"rxjs\");","module.exports = require(\"simple-excel-to-json\");","module.exports = require(\"unzipper\");","module.exports = require(\"zip-dir\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./main.ts\");\n",""],"names":[],"sourceRoot":""}